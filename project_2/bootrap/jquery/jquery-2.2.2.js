/ *! jQuery v2.2.2 | (c) Nền tảng jQuery | jquery.org/license * /
! function (a, b) {"object" == typeof module && "object" == typeof module.exports? module.exports = a.document? b (a ,! 0): function (a) {if (! a .document) throw new Error ("jQuery yêu cầu một cửa sổ có tài liệu"); return b (a)}: b (a)} ("không xác định"! = typeof window? window: this, function (a, b) { var c = [], d = a.document, e = c.slice, f = c.concat, g = c.push, h = c.indexOf, i = {}, j = i.toString, k = i .hasOwnProperty, l = {}, m = "2.2.2", n = chức năng (a, b) {trả về n.fn.init (a, b)}, o = / ^ [\ s \ uFEFF \ xA0 ] + | [\ s \ uFEFF \ xA0] + $ / g, p = / ^ - ms - /, q = / - ([\ da-z]) / gi, r = chức năng (a, b) {return b.toUpperCase ()}; n.fn = n.prototype = {jquery: m, constructor: n, selector: "", length: 0, toArray: function () {return e.call (this)}, get: hàm (a) {return null! = a? 0> a? this [a + this.length]: this [a]: e.call (this)}, pushStack: function (a) {var b = n.merge (this.constructor (), a); return b.trướcObject = this, b.context = this.context, b}, Each: function (a) {return n.each (this, a)}, map: function (a) {return this.pushStack (n.map (this , function (b, c) {return a.call (b, c, b)}))}, lát: function () {return this.pushStack (e.apply (this, argument))}, first: function ( ) {return this.eq (0)}, last: function () {return this.eq (-1)}, eq: function (a) {var b = this.length, c = + a + (0> a? b: 0); return this.pushStack (c> = 0 && b> c? [this [c]]: [])}, end: function () {return this.prevObject || this.constructor ()}, đẩy: g, sort: c.sort, splice: c.splice}, n.extend = n.fn.extend = function () {var a, b, c, d, e, f, g = argument [0] || {}, h = 1, i = argument.length, j =! 1; for ("boolean" == typeof g && (j = g, g = argument [h] || {}, h ++), "object" = = typeof g || n.isF rối (g) || (g = {}), h === i && (g = this, h -); i> h; h ++) if (null! = (a = argument [h])) cho (b trong a) c = g [b], d = a [b], g! == d && (j && d && (n.isPlainObject (d) || (e = n.isArray (d)))? (e? (e =! 1, f = c && n.isArray (c)? c: []): f = c && n. isPlainObject (c)? c: {}, g [b] = n.extend (j, f, d)): void 0! == d && (g [b] = d)); return g}, n.extend ({extendo: "jQuery" + (m + Math.random ()). thay thế (/ \ D / g, ""), isReady :! 0, error: function (a) {throw new Error (a)}, noop: function () {}, isFunction: function (a) {return "function" === n.type (a)}, isArray: Array.isArray, isWindow: function (a) {return null! = a && a == = a.window}, isNumeric: function (a) {var b = a && a.toString (); return! n.isArray (a) && b-parseFloat (b) +1> = 0}, isPlainObject: function (a) { var b; if ("object"! == n.type (a) || a.nodeType || n.isWindow (a)) return! 1; if (a.constructor &&! k.call (a, "constructor" ) &&! k.call (a.constructor.prototype || {}, "isPrototypeOf")) return! 1; for (b in a);return void 0 === b || k.call (a, b)}, isEmptyObject: function (a) {var b; for (b in a) return! 1; return! 0}, gõ: function (a) {return null == a? a + "": "object" == typeof a || "function" == typeof a? i [j.call (a)] || "object": typeof a}, globalEval: function (a) {var b, c = eval; a = n.trim (a), a && (1 === a.indexOf ("sử dụng nghiêm ngặt")? (b = d.createEuity ("script"), b. text = a, d.head.appendChild (b) .parentNode.removeChild (b)): c (a))}, camelCase: function (a) {return a.replace (p, "ms -"). thay thế ( q, r)}, nodeName: function (a, b) {return a.nodeName && a.nodeName.toLowerCase () === b.toLowerCase ()}, mỗi: function (a, b) {var c, d = 0 ; if (s (a)) {for (c = a.length; c> d; d ++) if (b.call (a [d], d, a [d]) ===! 1) break} khác for (d in a) if (b.call (a [d], d, a [d]) ===! 1) break; return a}, trim: function (a) {return null == a? " ": (a +" "). thay thế (o," ")},makeArray: function (a, b) {var c = b || []; return null! = a && (s (Object (a))? n.merge (c, "string" == typeof a? [a]: a): g.call (c, a)), c}, inArray: function (a, b, c) {return null == b? -1: h.call (b, a, c)}, hợp nhất: hàm (a, b) {for (var c = + b.length, d = 0, e = a.length; c> d; d ++) a [e ++] = b [d]; return a.length = e, a}, grep: function (a, b, c) {for (var d, e = [], f = 0, g = a.length, h =! c; g> f; f ++) d =! b ( a [f], f), d! == h && e.push (a [f]); return e}, map: function (a, b, c) {var d, e, g = 0, h = [] ; if (s (a)) for (d = a.length; d> g; g ++) e = b (a [g], g, c), null! = e && h.push (e); khác cho (g trong a) e = b (a [g], g, c), null! = e && h.push (e); return f.apply ([], h)}, guide: 1, proxy: function (a, b ) {var c, d, f; return "chuỗi" == typeof b && (c = a [b], b = a, a = c), n.isFunction (a)? (d = e.call (argument, 2), f = function () {return a.apply (b || this, d.concat (e.call (argument)))}, f.guid = a.guid = a.guid || n.guid ++, f): void 0}, ngay bây giờ: Date.now,hỗ trợ: l}), "function" == typeof Symbol && (n.fn [Symbol.iterator] = c [Symbol.iterator]), n.each ("Chuỗi số Boolean Mảng ngày Biểu tượng lỗi đối tượng RegExp" .split ( ""), hàm (a, b) {i ["[object" + b + "]"] = b.toLowerCase ()}); function s (a) {var b = !! a && "length" trong a && a. chiều dài, c = n.type (a); trả về "hàm" === c || n.isWindow (a)?! 1: "mảng" === c || 0 === b || "số" == typeof b && b> 0 && b-1 trong a} var t = function (a) {var b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u = "sizzle" + 1 * Ngày mới, v = a.document, w = 0, x = 0, y = ga (), z = ga (), A = ga () , B = hàm (a, b) {return a === b && (l =! 0), 0}, C = 1 << 31, D = {}. HasOwnProperty, E = [], F = E.pop , G = E.push, H = E.push, I = E.slice, J = function (a, b) {for (var c = 0, d = a.length; d> c; c ++) if (a [c] === b) trả về c; return-1}, K = "đã chọn | đã chọn | async | tự động lấy nét | tự động phát | điều khiển | trì hoãn | bị vô hiệu hóa | ẩn | ismap | vòng lặp | nhiều | mở | chỉ đọc | yêu cầu | có phạm vi ", L =" [ \ f] ", M =" (?: \\\\. | [\\ w-] | [^ \\ x00 - \\ xa0]) + ", N =" \\ ["+ L +" * ( "+ M +") (?: "+ L +" * ([* ^ $ |! ~]? =) "+ L +" * (?: '((?: \\\\. | [^ \ \ \ ']) *)' | \ "((?: \\\\. | [^ \\\\"]) *) \ "| (" + M + ")) |)" + L + "* \ ] ", O =" :( "+ M +") (?: \\ ((('((?: \\\\. | [^ \\\']) *) '| \ "((? : \\\\. | [^ \\\\\ "]) *) \") | ((?: \\\\. | [^ \\\\ () [\\]] | "+ N + ") *) |. *) \\) |)", P = RegExp mới (L + "+", "g"), Q = new RegExp ("^" + L + "+ | ((?: ^ | [ ^ \\\\]) (?: \\\\.) *) "+ L +" + $ "," g "), R = new RegExp (" ^ "+ L +" *, "+ L +" * " ), S = RegExp mới ("^" + L + "* ([> + ~] |"+ L + ")" + L + "*"), T = new RegExp ("=" + L + "* ([^ \] '\"] *?) "+ L +" * \\] "," g " ), U = new RegExp (O), V = new RegExp ("^" + M + "$"), W = {ID: new RegExp ("^ # (" + M + ")"), LỚP: RegExp mới ( "^ \\. (" + M + ")"), TAG: RegExp mới ("^ (" + M + "| [*])"), ATTR: RegExp mới ("^" + N), PSEUDO: RegExp mới ("^" + O), TRẺ: RegExp mới ("^ :( chỉ | đầu tiên | cuối | nth | nth-cuối) - (con | loại) (?: \\ (" + L + "* (thậm chí | lẻ | (([+ -] |) (\\ d *) n |) "+ L +" * (?: ([+ -] |) "+ L +" * (\\ d +) |)) "+ L + "* \\) |)", "i"), bool: new RegExp ("^ (?:" + K + ") $", "i"), cầnContext: RegExp mới ("^" + L + "* [> + ~] |: (chẵn | lẻ | eq | gt | lt | nth | đầu tiên | cuối cùng) (?: \\ ("+ L +" * ((?: - \ d)? \\ d *) "+ L +" * \\) |) (? = [^ -] | $) ","i")}, X = / ^ (?: input | select | textarea | nút) $ / i, Y = / ^ h \ d $ / i, Z = / ^ [^ {] + \ {\ s * \ [bản địa \ w /, $ = / ^ (?: # ([\ w -] +) | (\ w +) | \. ([\ w -] +)) $ /, _ = / [+ ~] /, aa = / '| \\ / g, ba = RegExp mới ("\\\\ ([\\ da-f] {1,6}" + L + "? | (" + L + ") |.) "," ig "), ca = function (a, b, c) {var d =" 0x "+ b-65536; return d! == d | | c? b: 0> d? String.fromCharCode (d +65536): String.fromCharCode (d >> 10 | 55296,1023 & d | 56320)}, da = function () {m ()}; thử {H.apply (E = I.call (v.childNodes), v .childNodes), E [v.childNodes.length] .nodeType} Catch (ea) {H = {áp dụng: E.length? function (a, b) {G.apply (a, I.call (b))} : function (a, b) {var c = a.length, d = 0; while (a [c ++] = b [d ++]); a.length = c-1}}} chức năng fa (a, b, d , e) {var f, h, j, k, l, o, r, s, w = b && b.ownerDocument, x = b? b.nodeType: 9; if (d = d || [], "chuỗi" ! = typeof a ||! a || 1! == x && 9! == x && 11! == x) trả lại d; if (! e && ((b? b.ownDocument | | b: v)! == n && m (b), b = b || n, p)) {if (11! == x && (o = $. exec (a))) if (f = o [ 1]) {if (9 === x) {if (! (J = b.getEuityById (f))) return d; if (j.id === f) return d.push (j), d} khác if (w && (j = w.getEuityById (f)) && t (b, j) && j.id === f) return d.push (j), d} khác {if (o [2]) return H. áp dụng (d, b.getElementsByTagName (a)), d; if ((f = o [3]) && c.getElementsByClassName && b.getElementsByClassName) trả về H.apply (d, b.getElements .qsa &&! A [a + ""] && (! q ||! q.test (a))) {if (1! == x) w = b, s = a; other if ("object"! == b.nodeName.toLowerCase ()) {(k = b.getAttribution ("id"))? k = k.replace (aa, "\\ $ &"): b.setAttribution ("id", k = u) , r = g (a), h = r.length, l = V.test (k)? "#" + k: "[id = '" + k + "']"; while (h -) r [ h] = l + "" + qa (r [h]); s = r.join (","), w = _.test (a) && oa (b.parentNode) || b} if (s) thử {return H.apply (d, w.querySelector ALL (s)), d} Catch (y) {} cuối cùng {k === u && b .removeAttribution ("id")}}} return i (a.replace (Q, "$ 1"), b, d, e)} chức năng ga () {var a = []; function b (c, e) { return a.push (c + "")> d.cacheLpm && xóa b [a.shift ()], b [c + ""] = e} return b} chức năng ha (a) {return a [u] =! 0, a } hàm ia (a) {var b = n.createEuity ("div"); thử {return !! a (b)} Catch (c) {return! 1} cuối cùng {b.parentNode && b.parentNode.removeChild (b) , b = null}} hàm ja (a, b) {var c = a.split ("|"), e = c.length; while (e -) d.attrHandle [c [e]] = b} hàm ka (a, b) {var c = b && a, d = c && 1 === a.nodeType && 1 === b.nodeType && (~ b.source Index || C) - (~ a.source Index || C); if ( d) return d; if (c) while (c = c.nextSibling) if (c === b) return-1; return a? 1:-1} function la (a) {return function (b) {var c = b.nodeName.toLowerCase (); return "input" === c && b.type === a}} chức năng ma (a) {hàm return (b) {var c = b.nodeName.toLowerCase (); return ("input" === c || "nút" === c) && b.type === a}} chức năng na (a) {return ha (hàm (b) {return b = + b, ha (hàm (c, d) {var e, f = a ([], c.length, b), g = f.length; while (g-- ) c [e = f [g]] && (c [e] =! (d [e] = c [e]))})})} hàm oa (a) {return a && "không xác định"! = typeof a .getElementsByTagName && a} c = fa.support = {}, f = fa.isXML = function (a) {var b = a && (a.ownerDocument || a) .documentEuity; return b? "HTML"! == b.node :! 1}, m = fa.setDocument = function (a) {var b, e, g = a? A.ownerDocument || a: v; return g! == n && 9 === g.nodeType && g.documentEuity? ( n = g, o = n.documentEuity, p =! f (n), (e = n.defaultView) && e.top! == e && (e.addEventListener? e.addEventListener ("unload", da ,! 1): e.attachEvent && e.attachEvent ("onunload", da)), c.attribut = ia (function (a) {return a.groupName = "i", ! a.getAttribution ("className")}), c.getElementsByTagName = ia (function (a) {return a.appendChild (n.createVer ("")),! a.getElementsByTagName ("*"). , c.getElementsByClassName = Z.test (n.getElementsByClassName), c.getById = ia (function (a) {return o.appendChild (a) .id = u ,! n.getElementsByName | | .length}), c.getById? (d.find.ID = function (a, b) {if ("không xác định"! = typeof b.getEuityById && p) {var c = b.getEuityById (a); return c? c]: []}}, d.filter.ID = function (a) {var b = a.replace (ba, ca); hàm trả về (a) {return a.getAttribution ("id") === b }}) :( xóa d.find.ID, d.filter.ID = function (a) {var b = a.replace (ba, ca);Hàm trả về (a) {var c = "không xác định"! = typeof a.getAttributionNode && a.getAttributionNode ("id"); return c && c.value === b}}), d.find.TAG = c.getElementsByTagName a, b) {return "không xác định"! = typeof b.getElementsByTagName? b.getElementsByTagName (a): c.qsa? b.querySelector ALL (a): void 0}: function (a, b) {var c, d = [], e = 0, f = b.getElementsByTagName (a); if ("*" === a) {while (c = f [e ++]) 1 === c.nodeType && d.push (c); return d} return f}, d.find.CLASS = c.getElementsByClassName && function (a, b) {return "không xác định"! = typeof b.getElementsByClassName && p? b.getElementsByClassName (a): [], (c.qsa = Z.test (n.querySelector ALL)) && (ia (hàm (a) {o.appendChild (a) .innerHTML = "<a id='"+u+"'> </ a > <select id = '"+ u +" - \ r \\' msallowcapture = ''> <tùy chọn đã chọn = ''> </ tùy chọn> </ select> ", a.querySelector ALL (" [msallowcapture ^ = ''] "). length && q.push (" [* ^ $] = "+ L +" * ( ?: '' | \ "\") "), a.querySelector ALL (" [đã chọn] "). length || q.push (" \\ ["+ L +" * (?: value | "+ K +") "), a.querySelector ALL (" [id ~ = "+ u +" -] "). length || q.push (" ~ = "), a.querySelector ALL (": đã kiểm tra "). length || q.push (": đã kiểm tra"), a.querySelector ALL ("a #" + u + "+ *"). length || q.push (". #. + [+ ~]")}), ia (hàm (a) { var b = n.createEuity ("input"); b.setAttribution ("type", "hidden"), a.appendChild (b) .setAttribution ("name", "D"), a.querySelector ALL ("[name = d] "). chiều dài && q.push (" tên "+ L +"* [* ^ $ |! ~]? = "), a.querySelector ALL (": enable "). length || q.push (": enable ",": tật "), a.querySelector ALL (" *,: x "), q.push (" ,. *: ")})), (c.matchesSelector = Z.test (s = o.matches || o.webkitMatchesSelector || o.mozMatchesSelector || o.oMatchesSelector | o.msMatchesSelector)) && ia (hàm (a) {c.disconnectedMatch = s.call (a, "div"), s.call (a, "[s! = '']: x"), r.push ( "! =", O)}), q = q.length && new RegExp (q.join ("|")), r = r.length && new RegExp (r.join ("|")), b = Z.test ( o.compareDocumentP vị trí), t = b || Z.test (o.contains)? function (a, b) {var c = 9 === a.nodeType? a.documentEuity: a, d = b && b.parentNode; return a === d ||! (! d || 1! == d.nodeType ||! (c.contains? c.contains (d): a.compareDocumentPocation && 16 & a.compareDocumentP vị trí (d)))}: function (a) ,b) {if (b) while (b = b.parentNode) if (b === a) return! 0; return! 1}, hàm B = b? (a, b) {if (a === b ) return l =! 0,0; var d =! a.compareDocumentPocation-! b.compareDocumentPocation; return d? d: (d = (a.ownerDocument || a) === (b.ownerDocument || b)? a.compareDocumentP vị trí (b): 1,1 & d ||! c.sortDetached && b.compareDocumentP vị trí (a) === d? a === n || a.ownerDocument === v && t (v, a)? - 1: b === n || b.ownerDocument === v && t (v, b)? 1: k? J (k, a) -J (k, b): 0: 4 & d? -1: 1)}: function ( a, b) {if (a === b) trả lại l =! 0,0; var c, d = 0, e = a.parentNode, f = b.parentNode, g = [a], h = [b ]; if (! e | |! f) trả về a === n? -1: b === n? 1: e? -1: f? 1: k? J (k, a) -J (k , b): 0; if (e === f) return ka (a, b); c = a; while (c = c.parentNode) g.unshift (c); c = b; while (c = c .parentNode) h.unshift (c); while (g [d] === h [d]) d ++; return d? ka (g [d], h [d]): g [d] === v ? -1: h [d] === v? 1: 0}, n): n}, fa.matches = function (a, b) {return fa (a, null, null, b)}, fa. MatchSelector = function (a, b) {if ((a.ownDocument || a)! == n && m (a), b = b.replace (T, "= '$ 1']"), c.matchesSelector && p &&! A [b + ""] && (! r ||! r.test (b)) && (! q | |! q.test (b))) thử {var d = s.call (a, b); if (d || c.disconnectedMatch || a.document && 11! == a .document.nodeType) return d} Catch (e) {} return fa (b, n, null, [a]). length> 0}, fa.contains = function (a, b) {return (a.ownerDocument | | a)! == n && m (a), t (a, b)}, fa.attr = function (a, b) {(a.ownerDocument || a)! == n && m (a); var e = d .attrHandle [b.toLowerCase ()], f = e && D.call (d.attrHandle, b.toLowerCase ())? e (a, b,! p): void 0; return void 0! == f? f: c.attribution ||! p? a.getAttribution (b) :( f = a.getAttributionNode (b)) && f.specified? f.value: null}, fa.error = function (a) {ném Lỗi mới (" Lỗi cú pháp, biểu thức không được nhận dạng: "+ a)}, fa.uniqueSort = function (a) {var b, d = [], e = 0, f = 0; if (l =! C.detectD repeatates,k =! c.sortStable && a.slice (0), a.sort (B), l) {while (b = a [f ++]) b === a [f] && (e = d.push (f)) ; while (e -) a.splice (d [e], 1)} return k = null, a}, e = fa.getText = function (a) {var b, c = "", d = 0, f = a.nodeType; if (f) {if (1 === f || 9 === f || 11 === f) {if ("chuỗi" == typeof a.textContent) trả về a.textContent ; for (a = a.firstChild; a; a = a.nextSibling) c + = e (a)} khác if (3 === f | | 4 === f) trả về a.nodeValue} khác trong khi (b = a [d ++]) c + = e (b); return c}, d = fa.selector = {cacheLdrops: 50, createdPseudo: ha, match: W, attrHandle: {}, find: {}, tương đối: {"> ": {dir:" ParentNode ", đầu tiên :! 0}," ": {dir:" ParentNode "}," + ": {dir:" trướcSibling ", đầu tiên :! 0}," ~ ": {dir: "trướcSibling"}}, preFilter: {ATTR: function (a) {return a [1] = a [1] .replace (ba, ca), a [3] = (a [3] || a [4] | | a [5] || ""). thay thế (ba, ca), "~ =" === a [2] &&(a [3] = "" + a [3] + ""), a.slice (0,4)}, CHILD: function (a) {return a [1] = a [1] .toLowerCase (), "Nth" === a [1] .slice (0,3)? (a [3] || fa.error (a [0]), a [4] = + (a [4]? a [5 ] + (a [6] || 1): 2 * ("chẵn" === a [3] || "lẻ" === a [3])), a [5] = + (a [7 ] + a [8] || "lẻ" === a [3])): a [3] && fa.error (a [0]), a}, PSEUDO: function (a) {var b, c = ! a [6] && a [2]; return W.CHILD.test (a [0])? null: (a [3]? a [2] = a [4] || a [5] || "" : c && U.test (c) && (b = g (c ,! 0)) && (b = c.indexOf (")", c.length-b) -c.length) && (a [0] = a [0] .slice (0, b), a [2] = c.slice (0, b)), a.slice (0,3))}}, bộ lọc: {TAG: function (a) {var b = a.replace (ba, ca) .toLowerCase (); return "*" === a? function () {return! 0}: function (a) {return a.nodeName && a.nodeName.toLowerCase () === b}}, LỚP: hàm (a) {var b = y [a + ""]; return b || (b = new RegExp ("(^ |"+ L + ")" + a + "(" + L + "| $)")) && y (a, hàm (a) {return b.test ("chuỗi" == typeof a. ClassName && a. ClassName || "không xác định"! = typeof a.getAttribution && a.getAttribution ("class") || "")})}, ATTR: function (a, b, c) {return function (d) {var e = fa.attr (d, a); trả về null == e? "! =" === b: b? (e + = "", "=" === b? e === c: "! =" === b? e! == c: "^ =" === b? c && 0 === e.indexOf (c): "* =" === b? c && e.indexOf (c)> - 1: "$ =" === b? c && e.slice (-c.length) === c: "~ =" === b? ("" + e.replace (P, "") + "") .indexOf (c)> - 1: " | = "=== b? e === c || e.slice (0, c.length + 1) === c +" - ":! 1):! 0}}, TRẺ: hàm (a, b, c, d, e) {var f = "nth"! == a.slice (0,3), g = "last"! == a.slice (-4), h = "of-type" === b;return 1 === d && 0 === e? function (a) {return !! a.parentNode}: function (b, c, i) {var j, k, l, m, n, o, p = f! == g? "nextSibling": "trướcSibling", q = b.parentNode, r = h && b.nodeName.toLowerCase (), s =! i &&! h, t =! 1; if (q) {if (f) { while (p) {m = b; while (m = m [p]) if (h? m.nodeName.toLowerCase () === r: 1 === m.nodeType) return! 1; o = p = "chỉ" === a &&! o && "nextSibling"} return! 0} if (o = [g? q.firstChild: q.lastChild], g && s) {m = q, l = m [u] || (m [u] = {}), k = l [m.uniqueID] || (l [m.uniqueID] = {}), j = k [a] || [], n = j [0] === w && j [1], t = n && j [2], m = n && q.childNodes [n]; while (m = ++ n && m && m [p] || (t = n = 0) || o.pop ()) nếu ( 1 === m.nodeType && ++ t && m === b) {k [a] = [w, n, t]; break}} khác if (s && (m = b, l = m [u] || ( m [u] = {}), k = l [m.uniqueID] || (l [m.uniqueID] = {}), j = k [a] || [], n = j [0] == = w && j [1], t = n), t ===! 1) trong khi (m = ++ n && m && m [p] || (t = n = 0) || o.pop ()) if ((h? m.nodeName.toLowerCase () === r: 1 === m.nodeType) && ++ t && (s && (l = m [u] || (m [u] = {}), k = l [m.uniqueID] || (l [m.uniqueID] = {}), k [a] = [w , t]), m === b)) break; return t- = e, t === d | | t% d === 0 && t / d> = 0}}}, PSEUDO: hàm (a, b ) {var c, e = d.pseudos [a] || d.setFilters [a.toLowerCase ()] || fa.error ("pseudo không được hỗ trợ:" + a); return e [u]? e (b) : e.length> 1? (c = [a, a, "", b], d.setFilters.hasOwnProperty (a.toLowerCase ())? ha (hàm (a, c) {var d, f = e ( a, b), g = f.length; while (g -) d = J (a, f [g]), a [d] =! (c [d] = f [g])}): hàm (a) {return e (a, 0, c)}): e}}, pseudos: {không: ha (hàm (a) {var b = [], c = [], d = h (a.replace (Q, "$ 1")); trả về d [u]? Ha (hàm (a, b, c, e) {var f, g = d (a, null, e, []), h = a.length ; while (h -) (f = g [h]) && (a [h] =! (b [h] = f))}): hàm (a, e, f) {return b [0] = a, d (b, null, f, c), b [0] = null ,! c.pop ()}}), có:ha (function (a) {return function (b) {return fa (a, b) .length> 0}}), chứa: ha (function (a) {return a = a.replace (ba, ca), function (b) {return (b.textContent || b.innerText || e (b)). indexOf (a)> - 1}}), lang: ha (hàm (a) {return V.test (a || "") || fa.error ("lang không được hỗ trợ:" + a), a = a.replace (ba, ca) .toLowerCase (), function (b) {var c; do if (c = p? B. lang: b.getAttribution ("xml: lang") || b.getAttribution ("lang")) return c = c.toLowerCase (), c === a || 0 === c.indexOf (a + "- "); while ((b = b.parentNode) && 1 === b.nodeType); return! 1}}), đích: function (b) {var c = a.location && a.location.hash; return c && c.slice (1) === b.id}, root: function (a) {return a === o}, tập trung: function (a) {return a === n.activeEuity && (! N.hasF Focus || n. hasF Focus ()) && !! (a.type || a.href || ~ a.tabIndex)}, enable: function (a) {return a.disables ===! 1}, bị vô hiệu hóa:hàm (a) {return a.disables ===! 0}, đã kiểm tra: function (a) {var b = a.nodeName.toLowerCase (); return "input" === b && !! a.checked || " tùy chọn "=== b && !! a.selected}, đã chọn: function (a) {return a.parentNode && a.parentNode.selectedIndex, a.selected ===! 0}, blank: function (a) {for (a = a.firstChild; a; a = a.nextSibling) if (a.nodeType <6) return! 1; return! 0}, Parent: function (a) {return! d.pseudos.empty (a)}, tiêu đề: function (a) {return Y.test (a.nodeName)}, input: function (a) {return X.test (a.nodeName)}, button: function (a) {var b = a.nodeName.toLowerCase ( ); return "input" === b && "button" === a.type || "button" === b}, text: function (a) {var b; return "input" === a.nodeName .toLowerCase () && "text" === a.type && (null == (b = a.getAttribution ("type")) || "text" === b.toLowerCase ())}, đầu tiên:na (function () {return [0]}), last: na (function (a, b) {return [b-1]}), eq: na (function (a, b, c) {return [0> c? c + b: c]}), chẵn: na (hàm (a, b) {for (var c = 0; b> c; c + = 2) a.push (c); return a}), lẻ : na (hàm (a, b) {for (var c = 1; b> c; c + = 2) a.push (c); return a}), lt: na (hàm (a, b, c) { for (var d = 0> c? c + b: c; - d> = 0;) a.push (d); return a}), gt: na (hàm (a, b, c) {for ( var d = 0> c? c + b: c; ++ d <b;) a.push (d); return a})}}, d.pseudos.nth = d.pseudos.eq; for (b in {radio :! 0, hộp kiểm :! 0, tệp :! 0, mật khẩu :! 0, hình ảnh :! 0}) d.pseudos [b] = la (b); for (b in {submit :! 0, đặt lại :! 0}) d.pseudos [b] = ma (b); function pa () {} pa.prototype = d.filters = d.pseudos, d.setFilters = new pa, g = fa.tokenize = function ( a, b) {var c, e, f, g, h, i, j, k = z [a + ""]; if (k) trả về b? 0: k.slice (0); h = a, i = [], j = d.preFilter; while (h) {c &&! (E = R.exec (h)) || (e && (h = h.slice (e [0] .length) || h), i.push (f = [])), c =! 1, (e = S.exec (h)) && (c = e.shift (), f.push ({value: c, type: e [0] .replace (Q, "")}), h = h.slice (c.length)); for (g in d.filter) ! (e = W [g] .exec (h)) || j [g] &&! (e = j [g] (e)) || (c = e.shift (), f.push ({value : c, loại: g, khớp: e}), h = h.slice (c.length)); if (! c) break} return b? h.length: h? fa.error (a): z ( a, i) .slice (0)}; hàm qa (a) {for (var b = 0, c = a.length, d = ""; c> b; b ++) d + = a [b] .value; Hàm trả về d} ra (a, b, c) {var d = b.dir, e = c && "ParentNode" === d, f = x ++; return b.first? function (b, c, f) {while (b = b [d]) if (1 === b.nodeType || e) trả về a (b, c, f)}: function (b, c, g) {var h, i, j, k = [w, f]; if (g) {while (b = b [d]) if ((1 === b.nodeType || e) && a (b, c, g)) trả về! 0} khác trong khi ( b = b [d]) if (1 === b.nodeType || e) {if (j = b [u] | | (b [u] = {}), i = j [b.uniqueID] | | (j [b.uniqueID] = {}), (h = i [d]) && h [0] === w && h [1] === f) return k [2] = h [2]; if ( i [d] = k, k [2] = a (b, c, g)) return! 0}}} hàm sa (a) {return a.length>1? Hàm (b, c, d) {var e = a.length; while (e -) if (! A [e] (b, c, d)) return! 1; return! 0}: a [ 0]} hàm ta (a, b, c) {for (var d = 0, e = b.length; e> d; d ++) fa (a, b [d], c); return c} hàm ua ( a, b, c, d, e) {for (var f, g = [], h = 0, i = a.length, j = null! = b; i> h; h ++) (f = a [h ]) && (c &&! c (f, d, e) || (g.push (f), j && b.push (h))); trả về hàm g} va (a, b, c, d, e, f ) {return d &&! d [u] && (d = va (d)), e &&! e [u] && (e = va (e, f)), ha (hàm (f, g, h, i) { var j, k, l, m = [], n = [], o = g.length, p = f | | ta (b || "*", h.nodeType? [h]: h, []) , q =! a | |! f && b? p: ua (p, m, a, h, i), r = c? e | | (f? a: o || d)? []: g: q; if (c && c (q, r, h, i), d) {j = ua (r, n), d (j, [], h, i), k = j.length; while (k -) ( l = j [k]) && (r [n [k]] =! (q [n [k]] = l))} if (f) {if (e | | a) {if (e) {j = [], k = r.length; while (k -) (l = r [k]) && j.push (q [k] = l); e (null, r = [], j, i)} k = r.length; while (k -) (l = r [k]) && (j = e? J (f, l): m [k])> - 1 && (f [j] =! (g [j] = l))}} other r = ua (r === g? r.splice (o, r.length): r), e? e (null, g, r, i): H.apply (g, r)})} hàm wa (a) {for (var b, c, e, f = a.length, g = d.relative [a [0]. loại], h = g | | d.relative [""], i = g? 1: 0, k = ra (hàm (a) {return a === b}, h ,! 0), l = ra (hàm (a) {return J (b, a)> - 1}, h ,! 0), m = [hàm (a, c, d) {var e =! g && (d || c! == j ) || ((b = c) .nodeType? k (a, c, d): l (a, c, d)); return b = null, e}]; f> i; i ++) if (c = d.relative [a [i] .type]) m = [ra (sa (m), c)]; other {if (c = d.filter [a [i] .type] .apply (null, a [ i] .matches), c [u]) {for (e = ++ i; f> e; e ++) if (d.relative [a [e] .type]) break; return va (i> 1 && sa (m ), i> 1 && qa (a.slice (0, i-1) .concat ({value: "" === a [i-2] .type? "*": ""})). thay thế (Q, "$ 1"), c, e> i && wa (a.slice (i, e)), f> e && wa (a = a.slice (e)), f> e && qa (a))} m.push (c)} Hàm trả về sa (m)} xa (a, b) {var c = b.length>0, e = a.length> 0, f = hàm (f, g, h, i, k) {var l, o, q, r = 0, s = "0", t = f && [], u = [], v = j, x = f || e && d.find.TAG ("*", k), y = w + = null == v? 1: Math.random () || .1, z = x. chiều dài; for (k && (j = g === n || g || k); s! == z && null! = (l = x [s]); s ++) {if (e && l) {o = 0, g | | l.ownerDocument === n || (m (l), h =! p); while (q = a [o ++]) if (q (l, g || n, h)) {i.push (l); break} k && (w = y)} c && ((l =! q && l) && r -, f && t.push (l))} if (r + = s, c && s! == r) {o = 0; while (q = b [o ++]) q (t, u, g, h); if (f) {if (r> 0) while (s -) t [s] || u [s] || ( u [s] = F.call (i)); u = ua (u)} H.apply (i, u), k &&! f && u.length> 0 && r + b.length> 1 && fa.uniqueSort (i)} return k && (w = y, j = v), t}; return c? ha (f): f} return h = fa.compile = function (a, b) {var c, d = [], e = [], f = A [a + ""]; if (! f) {b || (b = g (a)), c = b.length; while (c -) f = wa (b [c]), f [u]? d.push (f): e.push (f); f = A (a,xa (e, d)), f.selector = a} return f}, i = fa.select = function (a, b, e, f) {var i, j, k, l, m, n = " "== typeof a && a, o =! f && g (a = n.selector || a); if (e = e || [], 1 === o.length) {if (j = o [0] = o [0] .slice (0), j.length> 2 && "ID" === (k = j [0]). Gõ && c.getById && 9 === b.nodeType && p && d.relative [j [1] .type] if (b = (d.find.ID (k.matches [0] .replace (ba, ca), b) || []) [0],! b) trả lại e; n && (b = b.parentNode) , a = a.slice (j.shift (). value.length)} i = W.needContext.test (a)? 0: j.length; while (i -) {if (k = j [i] , d.relative [l = k.type]) break; if ((m = d.find [l]) && (f = m (k.matches [0] .replace (ba, ca), _. test ( j [0] .type) && oa (b.parentNode) || b))) {if (j.splice (i, 1), a = f.length && qa (j) ,! a) trả về H.apply (e, f), e; break}}} return (n || h (a, o)) (f, b ,! p, e ,! b || _.test (a) && oa (b.parentNode) || b ), e}, c.sortStable = u.split (""). sort (B).tham gia ("") === u, c.detectD repeatates = !! l, m (), c.sortDetached = ia (function (a) {return 1 & a.compareDocumentP vị trí (n.createEuity ("div"))}), ia (hàm (a) {return a.innerHTML = "<a href='#'> </a>", "#" === a.firstChild.getAttribution ("href")}) || ja (" loại | href | height | width ", hàm (a, b, c) {return c? void 0: a.getAttribution (b," type "=== b.toLowerCase ()? 1: 2)}), c .attribut && ia (function (a) {return a.innerHTML = "<input />", a.firstChild.setAttribution ("value", ""), "" === a.firstChild.getAttribution ("value")} ) || ja ("value", function (a, b, c) {return c || "input"! == a.nodeName.toLowerCase ()? void 0: a.defaultValue}), ia (function (a ) {return null == a.getAttribution ("bị vô hiệu hóa")}) || ja (K, hàm (a, b, c) {var d;return c? void 0: a [b] ===! 0? b.toLowerCase () :( d = a.getAttributionNode (b)) && d.specified? d.value: null}), fa} (a); n.find = t, n.expr = t.selector, n.expr [":"] = n.expr.pseudos, n.uniqueSort = n.unique = t.uniqueSort, n.text = t.getText, n .isXMLDoc = t.isXML, n.contains = t.contains; var u = function (a, b, c) {var d = [], e = void 0! == c; while ((a = a [b ]) && 9! == a.nodeType) if (1 === a.nodeType) {if (e && n (a) .is (c)) break; d.push (a)} return d}, v = function ( a, b) {for (var c = []; a; a = a.nextSibling) 1 === a.nodeType && a! == b && c.push (a); return c}, w = n.expr.match. nhu cầu Nội dung, x = / ^ <([\ w -] +) \ s * \ /?> (?: <\ / \ 1> |) $ /, y = / ^. [^: # \ [\., ] * $ /; hàm z (a, b, c) {if (n.isFunction (b)) return n.grep (a, function (a, d) {return !! b.call (a, d, a )! == c}); if (b.nodeType) return n.grep (a, function (a) {return a === b! == c}); if ("chuỗi" == typeof b) { if (y.test (b)) trả về n.filter (b, a, c); b = n.filter (b,a)} return n.grep (a, function (a) {return h.call (b, a)> - 1! == c})} n.filter = function (a, b, c) {var d = b [0]; return c && (a = ": not (" + a + ")"), 1 === b.length && 1 === d.nodeType? n.find.matchesSelector (d, a)? [d] : []: n.find.matches (a, n.grep (b, function (a) {return 1 === a.nodeType}))}, n.fn.extend ({find: function (a) { var b, c = this.length, d = [], e = this; if ("chuỗi"! = typeof a) return this.pushStack (n (a) .filter (function () {for (b = 0; c> b; b ++) if (n.contains (e [b], this)) return! 0})); for (b = 0; c> b; b ++) n.find (a, e [b], d); return d = this.pushStack (c> 1? n.unique (d): d), d.selector = this.selector? this.selector + "" + a: a, d}, filter: function (a ) {return this.pushStack (z (this, a || [],! 1))}, không phải: function (a) {return this.pushStack (z (this, a || [],! 0))} , là: function (a) {return !! z (this, "string" == typeof a && w.test (a)? n (a): a | | [],! 1) .length}}); var A , B = / ^ (?:\ s * (<[\ w \ W] +>) [^>] * | # ([\ w -] *)) $ /, C = n.fn.init = chức năng (a, b, c) { var e, f; if (! a) trả lại cái này; if (c = c || A, "chuỗi" == typeof a) {if (e = "<" === a [0] && ">" = == a [a.length-1] && a.length> = 3? [null, a, null]: B.exec (a) ,! e ||! e [1] && b) return! b || b. jquery? (b || c) .find (a): this.constructor (b) .find (a); if (e [1]) {if (b = b instanceof n? b [0]: b, n .merge (this, n.parseHTML (e [1], b && b.nodeType? b.ownerDocument || b: d ,! 0)), x.test (e [1]) && n.isPlainObject (b)) cho ( e in b) n.isFunction (this [e])? this [e] (b [e]): this.attr (e, b [e]); return this} return f = d.getEuityById (e [2 ]), f && f.parentNode && (this.length = 1, this [0] = f), this.context = d, this.selector = a, this} return a.nodeType? (this.context = this [0] = a, this.length = 1, this): n.isFunction (a)? void 0! == c. yet? c. yet (a): a (n) :( void 0! == a.selector && (this .selector = a.bộ chọn, this.context = a.context), n.makeArray (a, this))}; C.prototype = n.fn, A = n (d); var D = / ^ (?: cha mẹ | trước (? : Until | All)) /, E = {children :! 0, nội dung :! 0, next :! 0, trước :! 0}; n.fn.extend ({has: function (a) {var b = n (a, this), c = b.length; return this.filter (function () {for (var a = 0; c> a; a ++) if (n.contains (this, b [a])) return! 0})}, gần nhất: function (a, b) {for (var c, d = 0, e = this.length, f = [], g = w.test (a) || "chuỗi"! = Typeof a? n (a, b || this.context): 0; e> d; d ++) cho (c = this [d]; c && c! == b; c = c.parentNode) if (c.nodeType <11 && (g? g.index (c)> - 1: 1 === c.nodeType && n.find.matchesSelector (c, a))) {f.push (c); break} return this.pushStack (f.length> 1? N.uniqueSort (f): f)}, index: function (a) {return a? "String" == typeof a? H.call (n (a), this [0]): h.call ( this, a.jquery? a [0]: a): this [0] && this [0] .parentNode? this.first (). trước đó (). length: -1}, add: function (a,b) {return this.pushStack (n.uniqueSort (n.merge (this.get (), n (a, b)))))}, addBack: function (a) {return this.add (null == a? this.prevObject: this.prevObject.filter (a))}}); hàm F (a, b) {while ((a = a [b]) && 1! == a.nodeType); trả về a} n.each ({Parent: function (a) {var b = a.parentNode; return b && 11! == b.nodeType? b: null}, Parent: function (a) {return u (a, "ParentNode")}, ParentUntil: hàm (a, b, c) {return u (a, "ParentNode", c)}, next: function (a) {return F (a, "nextSibling")}, trước: function (a) {return F ( a, "trướcSibling")}, next ALL: function (a) {return u (a, "nextSibling")}, trước ALL: function (a) {return u (a, "trướcSibling")}, nextUntil: function (a, b, c) {return u (a, "nextSibling", c)}, trướcUntil: function (a, b, c) {return u (a, "trướcSibling", c)}, anh chị em: function (a) {return v ((a.parentNode || {}). FirstChild,a)}, children: function (a) {return v (a.firstChild)}, nội dung: function (a) {return a.contentDocument || n.merge ([], a.childNodes)}}, function (a , b) {n.fn [a] = function (c, d) {var e = n.map (this, b, c); trả về "Until"! == a.slice (-5) && (d = c), d && "chuỗi" == typeof d && (e = n.filter (d, e)), this.length> 1 && (E [a] || n.uniqueSort (e), D.test (a) && e .reverse ()), this.pushStack (e)}}); var G = / \ S + / g; hàm H (a) {var b = {}; return n.each (a.match (G) || [], hàm (a, c) {b [c] =! 0}), b} n.Callbacks = function (a) {a = "chuỗi" == typeof a? H (a): n.extend ( {}, a); var b, c, d, e, f = [], g = [], h = -1, i = function () {for (e = a.once, d = b =! 0 ; g.length; h = -1) {c = g.shift (); while (++ h <f.length) f [h] .apply (c [0], c [1]) ===! 1 && a.stopOnFalse && (h = f.length, c =! 1)} a.memory || (c =! 1), b =! 1, e && (f = c? []: "")}, J = { thêm: function () {return f && (c &&!b && (h = f.length-1, g.push (c)), hàm d (b) {n.each (b, function (b, c) {n.isFunction (c)? a.unique && j.has ( c) || ​​f.push (c): c && c.length && "chuỗi"! == n.type (c) && d (c)})} (đối số), c &&! b && i ()), this}, remove: function () {return n.each (đối số, hàm (a, b) {var c; while ((c = n.inArray (b, f, c))> - 1) f.splice (c, 1), h > = c && h -}), this}, has: function (a) {return a? n.inArray (a, f)> - 1: f.length> 0}, blank: function () {return f && (f = []), this}, vô hiệu hóa: function () {return e = g = [], f = c = "", this}, bị vô hiệu hóa: function () {return! f}, lock: function () {return e = g = [], c || (f = c = ""), cái này}, bị khóa: function () {return !! e}, fireWith: function (a, c) {return e || (c = c || [], c = [a, c.slice? c.slice (): c], g.push (c), b || i ()), này}, fire: function () {return j .fireWith (this, argument), this}, fire: function () {return !! d}}; return j}, n.extend ("bộ nhớ một lần"), "bị từ chối"], ["thông báo", "tiến trình", n.Callbacks ("bộ nhớ")]], c = "cấp phát", d = {state: function () {return c} , always: function () {return e.done (argument) .fail (argument), this}, sau đó: function () {var a = argument; return n.Deferred (function (c) {n.each (b, hàm (b, f) {var g = n.isFunction (a [b]) && a [b]; e [f [1]] (function () {var a = g && g.apply (this, argument); a && n. isFunction (a.promise)? a.promise (). tiến trình (c.notify) .done (c.resolve) .fail (c.reject): c [f [0] + "With"] (this === d? c.promise (): this, g? [a]: argument)})}), a = null}). hứa ()}, hứa: function (a) {return null! = a? n.extend (a, d): d}}, e = {};return d.pipe = d.then, n.each (b, hàm (a, f) {var g = f [2], h = f [3]; d [f [1]] = g.add, h && g .add (function () {c = h}, b [1 ^ a] [2] .disable, b [2] [2] .lock), e [f [0]] = function () {return e [ f [0] + "With"] (this === e? d: this, argument), this}, e [f [0] + "With"] = g.fireWith}), d.promise (e) , a && a.call (e, e), e}, khi: hàm (a) {var b = 0, c = e.call (đối số), d = c.length, f = 1! == d || a && n .isFunction (a.promise)? d: 0, g = 1 === f? a: n.Deferred (), h = function (a, b, c) {return function (d) {b [a] = this, c [a] = argument.length> 1? e.call (argument): d, c === i? g.notifyWith (b, c): - f || g.resolveWith (b, c) }}, i, j, k; if (d> 1) cho (i = new Array (d), j = new Array (d), k = new Array (d); d> b; b ++) c [b ] && n.isF rối (c [b] .promise)? c [b] .promise (). tiến trình (h (b, j, i)). thực hiện (h (b, k, c)). fail (g. từ chối): - f; return f || g.resolveWith (k, c), g.promise ()}}); var I; n.fn. yet = function (a) {return n. yet.promise ( ).xong (a), this}, n.extend ({isReady :! 1, readyWait: 1, HoldReady: function (a) {a? n. yetWait ++: n. yet (! 0)}, ready: function (a) {(a ===! 0? - n. yetWait: n.isReady) || (n.isReady =! 0, a! ==! 0 && - n. yetWait> 0 || (I.resolveWith (d , [n]), n.fn.triggerHandler && (n (d) .triggerHandler ("ready"), n (d) .off ("ready"))))}}); function J () {d.removeEventListener ("DOMContentLoaded", J), a.removeEventListener ("load", J), n. Yet ()} n. Yet.promise = function (b) {return I || (I = n.Deferred (), " hoàn thành "=== d. yetState ||" đang tải "! == d. yetState &&! d.documentEuity.doScroll? a.setTimeout (n. yet) :( d.addEventListener (" DOMContentLoaded ", J), a.addEvent ("tải", J))), I.promise (b)}, n. yet.promise (); var K = function (a, b, c, d, e, f, g) {var h = 0 , i = a.length, j = null == c; if ("object" === n.type (c)) {e =! 0;for (h in c) K (a, b, h, c [h],! 0, f, g)} khác if (void 0! == d && (e =! 0, n.isFunction (d) || (g =! 0), j && (g? (b.call (a, d), b = null) :( j = b, b = function (a, b, c) {return j.call (n (a ), c)})), b)) cho (; i> h; h ++) b (a [h], c, g? d: d.call (a [h], h, b (a [h] , c))); return e? a: j? b.call (a): i? b (a [0], c): f}, L = function (a) {return 1 === a.nodeType || 9 === a.nodeType ||! + A.nodeType}; function M () {this.Exando = n.Exando + M.uid ++} M.uid = 1, M.prototype = {register: function ( a, b) {var c = b || {}; return a.nodeType? a [this.Exando] = c: Object.defineProperty (a, this.Exando, {value: c, writable :! 0, có thể định cấu hình: ! 0}), a [this.Exando]}, cache: function (a) {if (! L (a)) return {}; var b = a [this.Exando]; return b || (b = { }, L (a) && (a.nodeType? A [this.Exando] = b: Object.defineProperty (a, this.Exando, {value: b, configureable :! 0}))), b}, set: hàm (a, b, c) {var d, e = this.cache (a); if ("chuỗi" == typeof b) e [b] = c; other for (d in b) e [d] = b [d];return e}, get: function (a, b) {return void 0 === b? this.cache (a): a [this.Exando] && a [this.Exando] [b]}, access: function (a , b, c) {var d; return void 0 === b || b && "chuỗi" == typeof b && void 0 === c? (d = this.get (a, b), void 0! == d ? d: this.get (a, n.camelCase (b))) :( this.set (a, b, c), void 0! == c? c: b)}, remove: function (a, b ) {var c, d, e, f = a [this.Exando]; if (void 0! == f) {if (void 0 === b) this.register (a); other {n.isArray ( b)? d = b.concat (b.map (n.camelCase)) :( e = n.camelCase (b), b trong f? d = [b, e] :( d = e, d = d in f? [d]: d.match (G) || [])), c = d.length; while (c -) xóa f [d [c]]} (void 0 === b || n .isEmptyObject (f)) && (a.nodeType? a [this.Exando] = void 0: xóa a [this.Exando])}}, hasData: function (a) {var b = a [this.Exando]; return void 0! == b &&! n.isEmptyObject (b)}}; var N = new M, O = new M, P = / ^ (?: \ {[\ w \ W] * \} | \ [[ \ w \ W] * \]) $ /, Q = / [AZ] / g; hàm R (a, b, c) {var d; if (void 0 === c &&1 === a.nodeType) if (d = "data -" + b.replace (Q, "- $ &"). ToLowerCase (), c = a.getAttribution (d), "string" == typeof c ) {thử {c = "true" === c ?! 0: "false" === c ?! 1: "null" === c? null: + c + "" === c? + c: P.test (c)? N.parseJSON (c): c;
} Catch (e) {} O.set (a, b, c)} other c = void 0; return c} n.extend ({hasData: function (a) {return O.hasData (a) || N. hasData (a)}, data: function (a, b, c) {return O.access (a, b, c)}, removeData: function (a, b) {O.remove (a, b)}, _ data : function (a, b, c) {return N.access (a, b, c)}, _ removeData: function (a, b) {N.remove (a, b)}}), n.fn.extend ( {data: function (a, b) {var c, d, e, f = this [0], g = f && f.attribut; if (void 0 === a) {if (this.length && (e = O. get (f), 1 === f.nodeType &&! N.get (f, "hasDataAttrs"))) {c = g.length; while (c -) g [c] && (d = g [c] .name, 0 === d.indexOf ("dữ liệu -") && (d = n.camelCase (d.slice (5)), R (f, d, e [d])))); f, "hasDataAttrs" ,! 0)} return e} return "object" == typeof a? this.each (function () {O.set (this, a)}): K (this, function (b) { var c, d; if (f && void 0 === b) {if (c = O.get (f, a) | | O.get (f, a.replace (Q, "- $ &"). toLowerCase ( )), khoảng trống 0!== c) return c; if (d = n.camelCase (a), c = O.get (f, d), void 0! == c) return c; if (c = R (f, d, void 0), void 0! == c) return c} other d = n.camelCase (a), this.each (function () {var c = O.get (this, d); O.set (this, d , b), a.indexOf ("-")> - 1 && void 0! == c && O.set (this, a, b)})}, null, b, argument.length> 1, null ,! 0)}, removeData: function (a) {return this.each (function () {O.remove (this, a)})}}), n.extend ({queue: function (a, b, c) {var d; return a? (b = (b || "fx") + "hàng đợi", d = N.get (a, b), c && (! d || n.isArray (c)? d = N.access (a, b, n.makeArray (c)): d.push (c)), d || []): void 0}, dequeue: function (a, b) {b = b || "fx"; var c = n.queue (a, b), d = c.length, e = c.shift (), f = n._queueHooks (a, b), g = function () {n.dequeue (a, b)}; "inprowards" === e && (e = c.shift (), d -), e && ("fx" === b && c.unshift ("inprowards"), xóa f.stop, e.call (a, g , f)) ,!& f && f.empty.fire ()}, _ queueHooks: function (a, b) {var c = b + "queueHooks"; return N.get (a, c) || ​​N.access (a, c, {blank: n. Gọi lại ("bộ nhớ một lần"). Add (function () {N.remove (a, [b + "queue", c])})})}}), n.fn.extend ({queue: function (a, b) {var c = 2; trả về "chuỗi"! = typeof a && (b = a, a = "fx", c -), argument.length <c? n.queue (this [0], a): void 0 === b? this: this.each (function () {var c = n.queue (this, a, b); n._queueHooks (this, a), "fx" === a && "inproceed" ! == c [0] && n.dequeue (this, a)})}, dequeue: function (a) {return this.each (function () {n.dequeue (this, a)})}, clearQueue: function (a) {return this.queue (a || "fx", [])}, lời hứa: hàm (a, b) {var c, d = 1, e = n.Deferred (), f = this, g = this.length, h = function () {- d || e.resolveWith (f, [f])}; "chuỗi"! = typeof a && (b = a, a = void 0), a = a | | "fx"; while (g -) c = N.get (f [g], a + "queueHooks"), c && c.empty && (d ++, c.empty.add (h)); return h (), e.promise (b )}}); var S = / [+ -]? (?: \ d * \. |) \ d + (?: [eE] [+ -]? \ d + |) /. source, T = new RegExp ( "^ (?: ([+ -]) = |) (" + S + ") ([az%] *) $", "i"), U = ["Trên cùng", "Phải", "Dưới cùng", "Trái"], V = function (a, b) {return a = b || a, "none" === n.css (a, "display") ||! N.contains (a.ownerDocument, a )}; hàm W (a, b, c, d) {var e, f = 1, g = 20, h = d? function () {return d.cur ()}: function () {return n.css (a, b, "")}, i = h (), j = c && c [3] || (n.cssNumber [b]? "": "px"), k = (n.cssNumber [b] | | "px"! == j && + i) && T.exec (n.css (a, b)); if (k && k [3]! == j) {j = j || k [3], c = c || [], k = + i | | 1; do f = f || ".5", k / = f, n.style (a, b, k + j); while (f! == (f = h () / i) && 1! == f && - g)} trả lại c && (k = + k || + i || 0, e = c [1]? K + (c [1] +1) * c [2]: + c [2], d && (d.unit = j, d.start = k, d.end = e)), e} var X = / ^ (?: hộp kiểm | radio) $ / i, Y = / <([\ w: -] +) /, Z = / ^ $ | \ / (?: java | ecma) script / i, $ = {tùy chọn: [1, "<select many = 'many'>", "</ select>"], thead: [1, "< bảng> "," </ bảng> "], col: [2," <bảng> <colgroup> "," </ colgroup> </ bảng> "], tr: [2," <bảng> <tbody> "," </ tbody> </ table> "], td: [3," <bảng> <tbody> <tr> "," </ tr> </ tbody> </ table> "], _ default: [ 0, "", ""]}; $. Optgroup = $. Tùy chọn, $. Tbody = $. Tfoot = $. Colgroup = $. Caption = $. Thead, $. Th = $. Td; function _ (a , b) {var c = "không xác định"! = typeof a.getElementsByTagName? a.getElementsByTagName (b || "*"): "không xác định "! = typeof a.querySelector ALL? a.querySelector ALL (b ||" * "): []; return void 0 === b || b && n.nodeName (a, b)? n.merge ([a], c): c} hàm aa (a, b) {for (var c = 0, d = a.length; d> c; c ++) N.set (a [c], "globalEval" ,! b || N .get (b [c], "globalEval"))} var ba = / <| & #? \ w +; /; chức năng ca (a, b, c, d, e) {for (var f, g, h , i, j, k, l = b.createDocumentFragment (), m = [], o = 0, p = a.length; p> o; o ++) if (f = a [o], f || 0 = == f) if ("object" === n.type (f)) n.merge (m, f.nodeType? [f]: f); other if (ba.test (f)) {g = g | | l.appendChild (b.createEuity ("div")), h = (Y.exec (f) || ["", ""]) [1] .toLowerCase (), i = $ [h] | | $ ._ mặc định, g.innerHTML = i [1] + n.htmlPrefilter (f) + i [2], k = i [0]; while (k -) g = g.lastChild; n.merge (m , g.childNodes), g = l.firstChild, g.textContent = ""} other m.push (b.createTextNode (f)); l.textContent = "", o = 0; while (f = m [o ++ ]) nếu (d && n.inArray (f, d)> - 1) e && e.push (f); other if (j = n.contains (f.ownerDocument, f), g = _ (l.appendChild (f), "script") , j && aa (g), c) {k = 0; while (f = g [k ++]) Z.test (f.type || "") && c.push (f)} return l}! function () {var a = d.createDocumentFragment (), b = a.appendChild (d.createEuity ("div")), c = d.createEuity ("input"); c.setAttribution ("type", "radio"), c. setAttribution ("đã kiểm tra", "đã kiểm tra"), c.setAttribution ("name", "t"), b.appendChild (c), l.checkClone = b.cloneNode (! 0) .cloneNode (! 0) .lastChild .checked, b.innerHTML = "<textarea> x </ textarea>", l.noCloneChecked = !! b.cloneNode (! 0) .lastChild.defaultValue} (); var da = / ^ key /, ea = / ^ (?: chuột | con trỏ | bối cảnh | kéo | thả) | nhấp /, fa = / ^ ([^.] *) (?: \. (. +) |) /; chức năng ga () {return! 0 } hàm ha () {return!1} hàm ia () {thử {return d.activeEuity} Catch (a) {}} chức năng ja (a, b, c, d, e, f) {var g, h; if ("object" == typeof b) {"chuỗi"! = typeof c && (d = d || c, c = void 0); for (h in b) ja (a, h, c, d, b [h], f); trả về a } if (null == d && null == e? (e = c, d = c = void 0): null == e && ("chuỗi" == typeof c? (e = d, d = void 0) :( e = d, d = c, c = void 0)), e ===! 1) e = ha; khác nếu (! e) trả về a; trả về 1 === f && (g = e, e = function (a ) {return n (). off (a), g.apply (this, argument)}, e.guid = g.guid || (g.guid = n.guid ++)), a.each (function () { n.event.add (this, b, e, d, c)})} n.event = {global: {}, add: function (a, b, c, d, e) {var f, g, h , i, j, k, l, m, o, p, q, r = N.get (a); if (r) {c.handler && (f = c, c = f.handler, e = f.selector ), c.guid || (c.guid = n.guid ++), (i = r.events) || (i = r.events = {}), (g = r.handle) || (g = r .handle = function (b) {return "không xác định"! = typeof n && n.event.triggered! == b.type? n.event.dispatch.áp dụng (a, đối số): void 0}), b = (b || ""). match (G) || [""], j = b.length; while (j -) h = fa.exec (b [j]) || [], o = q = h [1], p = (h [2] || ""). split ("."). sort (), o && (l = n. event.special [o] || {}, o = (e? l.delegateType: l.bindType) || o, l = n.event.special [o] || {}, k = n.extend ({ loại: o, origType: q, data: d, handler: c, guide: c.guid, selector: e, cầnContext: e && n.expr.match.needContext.test (e), không gian tên: p.join ("." )}, f), (m = i [o]) || (m = i [o] = [], m.delegateCount = 0, l.setup && l.setup.call (a, d, p, g)! ==! 1 || a.addEventListener && a.addEventListener (o, g)), l.add && (l.add.call (a, k), k.handler.guid || (k.handler.guid = c.guid )), e? m .splice (m.delegateCount ++, 0, k): m.push (k), n.event.global [o] =! 0)}}, xóa: function (a, b, c, d, e) {var f, g, h, i, j, k, l, m, o, p, q, r = N.hasData (a) && N.get (a); if (r && (i = r .events)) {b = (b || "").khớp (G) | | [""], j = b.length; while (j -) if (h = fa.exec (b [j]) | | [], o = q = h [1], p = (h [2] || ""). split ("."). sort (), o) {l = n.event.special [o] || {}, o = (d? l.delegateType : l.bindType) || o, m = i [o] || [], h = h [2] && RegExp mới ("(^ | \\.)" + p.join ("\\. (?: . * \\. |) ") +" (\\. | $) "), g = f = m.length; while (f -) k = m [f] ,! e && q! == k.origType || c && c.guid! == k.guid || h &&! h.test (k.namespace) || d && d! == k.selector && ("**"! == d ||! k.selector) || (m.splice (f, 1), k.selector && m.delegateCount -, l.remove && l.remove.call (a, k)); g &&! m.length && (l.teardown && l.teardown.call (a, p r.handle)! ==! 1 || n.removeEvent (a, o, r.handle), xóa i [o])} khác cho (o in i) n.event.remove (a, o + b [ j], c, d ,! 0); n.isEmptyObject (i) && N.remove (a, "xử lý các sự kiện")}}, Clark: function (a) {a = n.event.sửa (a); var b, c, d, f, g, h = [], i = e.call (đối số), j = (N.get (này, "sự kiện") || {}) [a .type] || [], k = n.event.special [a.type] || {}; if (i [0] = a, a.delegateTarget = this ,! k.preDispatch || k.preDispatch. gọi (này, a)! ==! 1) {h = n.event.handlers.call (this, a, j), b = 0; while ((f = h [b ++]) &&! a.isPropagationStopped ( )) {a.cienTarget = f.elem, c = 0; while ((g = f.handlers [c ++]) &&! a.isImmediatePropagationStopped ()) a.rnamespace &&! a.rnamespace.test (g.namespace | (a.handleObj = g, a.data = g.data, d = ((n.event.special [g.origType] || {}). xử lý | | g.handler) .apply (f.elem, i), void 0! == d && (a.result = d) ===! 1 && (a.preventDefault (), a.stopPropagation ()))} return k.postDispatch && k.postDispatch.call (this, a), a.result}}, trình xử lý: function (a, b) {var c, d, e, f, g = [], h = b.delegateCount, i = a.target; if (h && i.nodeType && ("click" ! == a.type | | isNaN (a.nút) || a.button <1)) cho (; i! == this; i = i.parentNode || this) if (1 === i.nodeType && (i.disables! ==! 0 || " nhấp vào "! == a.type)) {for (d = [], c = 0; h> c; c ++) f = b [c], e = f.selector +" ", void 0 === d [ e] && (d [e] = f.needContext? n (e, this) .index (i)> - 1: n.find (e, this, null, [i]). length), d [e] && d.push (f); d.length && g.push ({elem: i, handlers: d})} return h <b.length && g.push ({elem: this, handlers: b.slice (h)}), g }, đạo cụ: "bong bóng altKey có thể hủy ctrlKey currentTarget chi tiết sự kiệnPhase metaKey liên quanTarget shiftKey target timeStamp view mà" .split (""), fixHooks: {}, keyHooks: {props: "char charCode keyCode" .split (") bộ lọc: function (a, b) {return null == a.which && (a.which = null! = b.charCode? b.charCode: b.keyCode), a}}, mouseHooks: {props: "nút nút clientX clientY offsetX offsetY pageX pageY screenX screenY toEuity ".split (" "), bộ lọc: function (a, b) {var c, e, f, g = b.button; return null == a.pageX && null! = b.clientX && (c = a.target.ownerDocument || d, e = c.documentEuity, f = c.body, a.pageX = b.clientX + (e && e.scrollLeft || f && f.scrollLeft || .clientLeft || f && f.clientLeft || 0), a.pageY = b.clientY + (e && e.scrollTop || f && f.scrollTop || 0) - (e && e.clientTop || f && mà | | void 0 === g || (a.which = 1 & g? 1: 2 & g? 3: 4 & g? 2: 0), a}}, fix: function (a) {if (a [n.Exando] ) trả về a; var b, c, e, f = a.type, g = a, h = this.fixHooks [f]; h || (this.fixHooks [f] = h = ea.test (f)? this.mouseHooks: da.test (f)? this.keyHooks: {}), e = h.props? this.props.concat (h.props): this.props, a = new n.Event (g), b = e.length; while (b -) c = e [b], a [c] = g [c]; trả về a.mục tiêu || (a.target = d), 3 === a.target.nodeType && (a.target = a.target.parentNode), h.filter? h.filter (a, g): a}, đặc biệt: {load: {noBubble :! 0}, tập trung: {trigger: function () {return this! == ia () && this.f Focus? (this.f Focus (),! 1): void 0}, ủy nhiệmType: "Focusin "}, Blur: {trigger: function () {return this === ia () && this.blur? (this.blur (),! 1): void 0}, ủy nhiệmType:" Focusout "}, nhấp: {trigger : function () {return "hộp kiểm" === this.type && this.click && n.nodeName (this, "input")? (this.click (),! 1): void 0}, _ default: function (a) {return n.nodeName (a.target, "a")}}, beforeunload: {postDispatch: function (a) {void 0! == a.result && a.origenEvent && (a.origenEvent.returnValue = a.result)}} , n.removeEvent = function (a, b, c) {a.removeEventListener && a.removeEventListener (b, c)}, n.Event = function (a,b) {trả lại thể hiện này n.Event? (a && a.type? (this.origenEvent = a, this.type = a.type, this.isDefaultPrevented = a.defaultPrevented || void 0 === a.defaultPrevented ==! 1? Ga: ha): this.type = a, b && n.extend (this, b), this.timeStamp = a && a.timeStamp || n.now (), void (this [n.Exando] =! 0)): new n.Event (a, b)}, n.Event.prototype = {constructor: n.Event, isDefaultPrevented: ha, isPropagationStopped: ha, isImmediatePropagationStopped: ha, notifyDefault .originalEvent; this.isDefaultPrevented = ga, một && a.preventDefault ()}, stopPropagation: function () {var a = this.originalEvent; this.isPropagationStopped = ga, một && a.stopPropagation ()}, stopImmediatePropagation: function () {var a = this.origenEvent; this.isImmediatePropagationStopped = ga, a && a.stopImmediatePropagation (), this.stopPropagation ()}}, n.each ({mouseenter: "mouseover ", mouseleave:" mouseout ", con trỏ:" con trỏ ", con trỏ:" con trỏ "}, hàm (a, b) {n.event.special [a] = {ủy nhiệm: b, bindType: b, xử lý: hàm (a) {var c, d = this, e = a.relatedTarget, f = a.handleObj; return e && (e === d || n.contains (d, e)) || (a.type = f .origType, c = f.handler.apply (this, argument), a.type = b), c}}}), n.fn.extend ({on: function (a, b, c, d) {return ja (this, a, b, c, d)}, one: function (a, b, c, d) {return ja (this, a, b, c, d, 1)}, off: function (a, b, c) {var d, e; if (a && a.preventDefault && a.handleObj) return d = a.handleObj, n (a.delegateTarget) .off (d.namespace? d.origType + "." + d. .origType, d.selector, d.handler), this; if ("object" == typeof a) {for (e in a) this.off (e, b, a [e]); return this} return b ! ==! 1 && "hàm"! = Typeof b || (c = b, b = void 0), c ===! 1 && (c = ha), cái này.mỗi (hàm () {n.event.remove (this, a, c, b)})}}); var ka = / <(?! khu vực | br | col | embed | hr | img | input | link | meta | param) (([\ w: -] +) [^>] *) \ /> / gi, la = / <script | <style | <link / i, ma = / đã kiểm tra \ s * (?: [^ =] | = \ s *. đã kiểm tra.) / i, na = / ^ đúng \ / (. *) /, oa = / ^ \ s * <! (?: \ [CDATA \ [| -) | (?: \] \] | -)> \ s * $ / g; hàm pa (a, b) {return n.nodeName (a, "bảng") && n.nodeName (11! == b.nodeType ? b: b.firstChild, "tr")? a.getElementsByTagName ("tbody") [0] || a.appendChild (a.ownerDocument.createEuity ("tbody")): a} hàm qa (a) a.type = (null! == a.getAttribution ("type")) + "/" + a.type, a} chức năng ra (a) {var b = na.exec (a.type); return b? a.type = b [1]: a.removeAttribution ("type"), a} hàm sa (a, b) {var c, d, e, f, g, h, i, j; if (1 == = b.nodeType) {if (N.hasData (a) && (f = N.access (a), g = N.set (b, f), j = f.events)) {xóa g.handle, g .events = {};for (e in j) for (c = 0, d = j [e] .length; d> c; c ++) n.event.add (b, e, j [e] [c])} O.hasData ( a) && (h = O.access (a), i = n.extend ({}, h), O.set (b, i))}} chức năng ta (a, b) {var c = b.nodeName .toLowerCase (); "input" === c && X.test (a.type)? b.checked = a.checked: "input"! == c && "textarea"! == c || (b.defaultValue = a .defaultValue)} hàm ua (a, b, c, d) {b = f.apply ([], b); var e, g, h, i, j, k, m = 0, o = a.length , p = o-1, q = b [0], r = n.isFunction (q); if (r || o> 1 && "chuỗi" == typeof q &&! l.checkClone && ma.test (q)) trả về a .each (hàm (e) {var f = a.eq (e); r && (b [0] = q.call (this, e, f.html ())), ua (f, b, c, d )}); if (o && (e = ca (b, a [0] .ownerDocument ,! 1, a, d), g = e.firstChild, 1 === e.childNodes.length && (e = g), g || d)) {for (h = n.map (_ (e, "script"), qa), i = h.length; o> m; m ++) j = e, m! == p && (j = n.clone (j ,! 0 ,! 0), i && n.merge (h,_ (j, "script"))), c.call (a [m], j, m); if (i) cho (k = h [h.length-1] .ownerDocument, n.map (h, ra), m = 0; i> m; m ++) j = h [m], Z.test (j.type || "") &&! N.access (j, "globalEval") && n.contains (k, j) && (j.src? n._evalUrl && n._evalUrl (j.src): n.globalEval (j.textContent.replace (oa, "")))} trả về hàm}} (a, b, c) { for (var d, e = b? n.filter (b, a): a, f = 0; null! = (d = e [f]); f ++) c || 1! == d.nodeType || n.cleanData (_ (d)), d.parentNode && (c && n.contains (d.ownerDocument, d) && aa (_ (d, "script")), d.parentNode.removeChild (d)); .extend ({htmlPrefilter: function (a) {return a.replace (ka, "<$ 1> </ $ 2>")}, clone: ​​function (a, b, c) {var d, e, f, g, h = a.cloneNode (! 0), i = n.contains (a.ownerDocument, a); if (! (l.noCloneChecked || 1! == a.nodeType && 11! == a.nodeType || n.isXMLDoc (a))) cho (g = _ (h), f = _ (a), d = 0,e = f.length; e> d; d ++) ta (f [d], g [d]); if (b) if (c) for (f = f || _ (a), g = g | | _ (h), d = 0, e = f.length; e> d; d ++) sa (f [d], g [d]); other sa (a, h); return g = _ (h, " script "), g.length> 0 && aa (g ,! i && _ (a," script ")), h}, cleanData: function (a) {for (var b, c, d, e = n.event.special, f = 0; void 0! == (c = a [f]); f ++) if (L (c)) {if (b = c [N.Exando]) {if (b.events) for (d in b.events) e [d]? n.event.remove (c, d): n.removeEvent (c, d, b.handle); c [N.Exando] = void 0} c [O.Exando] && (c [O.Exando] = void 0)}}}), n.fn.extend ({domManip: ua, detach: function (a) {return va (this, a ,! 0)}, remove: function ( a) {return va (this, a)}, text: function (a) {return K (this, function (a) {return void 0 === a? n.text (this): this.empty (). mỗi (hàm () {1! == this.nodeType && 11! == this.nodeType && 9! == this.nodeType || (this.textContent = a)})}, null, a, argument.length)}, append: function () {return ua (this, argument,hàm (a) {if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {var b = pa (this, a); b.appendChild (a) }})}, preend: function () {return ua (this, argument, function (a) {if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType ) {var b = pa (this, a); b.insertB Before (a, b.firstChild)}})}, before: function () {return ua (this, argument, function (a) {this.parentNode && this.parentNode .insertB Before (a, this)})}, after: function () {return ua (this, argument, function (a) {this.parentNode && this.parentNode.insertB Before (a, this.nextSibling)})}, blank: function () {for (var a, b = 0; null! = (a = this [b]); b ++) 1 === a.nodeType && (n.cleanData (_ (a ,! 1)), a.textContent = ""); trả lại cái này}, clone: ​​function (a, b) {return a = null == a ?! 1: a, b = null == b? a: b, this.map (function () { return n.clone (this, a, b)})}, html: function (a) {return K (this, function (a) {var b = this [0] || {}, c = 0, d = này.length;if (void 0 === a && 1 === b.nodeType) trả về b.innerHTML; if ("chuỗi" == typeof a &&! la.test (a) &&! $ [(Y.exec (a) || [ "", ""]) [1] .toLowerCase ()]) {a = n.htmlPrefilter (a); thử {for (; d> c; c ++) b = this [c] || {}, 1 = == b.nodeType && (n.cleanData (_ (b ,! 1)), b.innerHTML = a); b = 0} Catch (e) {}} b && this.empty (). append (a)}, null , a, argument.length)}, thayWith: function () {var a = []; return ua (this, argument, function (b) {var c = this.parentNode; n.inArray (this, a) <0 && (n.cleanData (_ (this)), c && c.replaceChild (b, this))}, a)}}), n.each ({appendTo: "append", preendTo: "preend", insertB Before: "before" , insertAfter: "after", thayTất cả: "thay thế", hàm (a, b) {n.fn [a] = function (a) {for (var c, d = [], e = n (a), f = e.length-1, h = 0; f> = h; h ++) c = h === f? this: this.clone (! 0), n (e [h]) [b] (c) , g.áp dụng (d, c.get ()); return this.pushStack (d)}}); var wa, xa = {HTML: "block", BODY: "block"}; function ya (a, b) {var c = n (b.createEuity (a)). appendTo (b.body), d = n.css (c [0], "display"); return c.detach (), d} chức năng za (a) { var b = d, c = xa [a]; return c || (c = ya (a, b), "none"! == c && c | | (wa = (wa || n ("<iframe frameborder = ' 0 'width =' 0 'height =' 0 '/> ")). AppendTo (b.documentEuity), b = wa [0] .contentDocument, b.write (), b.close (), c = ya ( a, b), wa.detach ()), xa [a] = c), c} var Aa = / ^ lề /, Ba = new RegExp ("^ (" + S + ") (? px) [az %] + $ "," i "), Ca = function (b) {var c = b.ownerDocument.defaultView; return c && c.opener || (c = a), c.getComputingStyle (b)}, Da = function (a, b, c, d) {var e, f, g = {}; for (f in b) g [f] = a.style [f], a.style [f] = b [f]; e = c.apply (a, d || []); for (f in b) a.style [f] = g [f]; return e}, Ea = d.documentEuity ;! function () {var b, c, e, f, g = d.createEuity ("div"), h = d.createEuity ("div"); if (h.style) {h.style.backgroundClip = "hộp nội dung", h.cloneNode (! 0) .style.backgroundClip = "", l.clearCloneStyle = "content-box" === h.style.backgroundClip, g.style.cssText = "Border: 0 ; width: 8px; height: 0; top: 0; left: -9999px; padding: 0; lề-top: 1px; vị trí: tuyệt đối ", g.appendChild (h); function i () {h.style.cssText = "- webkit-box-sizing: Border-box; -moz-box-sizing: Border-box; box-sizing: Border-box; vị trí: tương đối; display: block; lề: auto; Border: 1px; padding: 1px; top: 1%; width: 50% ", h.innerHTML =" ", Ea.appendChild (g); var d = a.getComputingStyle (h); b =" 1% "! == d.top, f = "2px" === d.marginLeft, c = "4px" === d. thong, h.style.marginRight = "50%", e = "4px" === d.marginRight, Ea.removeChild (g)} n.extend (l, {pixelPocation: function () {return i (), b}, boxSizingReliable: function () {return null == c && i (), c}, pixelMarginRight: function () {return null == c && i (), e}, TrustedMarginLeft: function () {return null == c && i (), f}, TrustedMarginRight: function () {var b, c = h.appendChild (d.createEuity ("div") ); return c.style.cssText = h.style.cssText = "- webkit-box-sizing: content-box; box-sizing: content-box; display: block; lề: 0; Border: 0; padding: 0 ", c.style.marginRight = c.style. thong =" 0 ", h.style. thong =" 1px ", Ea.appendChild (g), b =! parseFloat (a.getComputingStyle (c) .marginRight), Ea.removeChild (g), h.removeChild (c), b}})}} (); hàm Fa (a, b, c) {var d, e, f, g, h = a.style; return c = c | | Ca (a), g = c? c.getPropertyValue (b) || c [b]: void 0, ""! == g && void 0! == g || n.contains (a.ownerDocument, a) || (g = n.style (a, b)), c &&! l.pixelMarginRight () && Ba.test (g) && Aa.test (b) && (d = h. mật, e = h.minWidth, f = h.maxWidth, h.minWidth = h.maxWidth = h. = g, g = c. thong, h. thong = d, h.minWidth = e, h.maxWidth = f), void 0! == g? g + "": g} chức năng Ga (a, b) {return {get: function () {return a ()? void xóa this.get: (this.get = b) .apply (this, argument)}}} var Ha = / ^ (none | bảng (?! - c [ ea]). +) /, Ia = {vị trí: "tuyệt đối", khả năng hiển thị: "ẩn", hiển thị: "chặn"}, Ja = {letterSpaces: "0", fontweight: "400"}, Ka = [" Webkit "," O "," Moz "," ms "], La = d.createEuity (" div "). Style; function Ma (a) {if (a in La) trả về a; var b = a [0 ] .toUpperCase () + a.slice (1), c = Ka.length; while (c -) if (a = Ka [c] + b, a in La) trả về a} hàm Na (a, b, c) {var d = T.exec (b); return d? Math.max (0, d [2] - (c | | 0)) + (d [3] || "px"): hàm b} Oa (a, b, c,d, e) {for (var f = c === (d? "đường viền": "nội dung")? 4: "width" === b? 1: 0, g = 0; 4> f; f + = 2) "lề" === c && (g + = n.css (a, c + U [f],! 0, e)), d? ("Nội dung" === c && (g- = n.css ( a, "đệm" + U [f],! 0, e)), "lề"! == c && (g- = n.css (a, "đường viền" + U [f] + "Chiều rộng" ,! 0 , e))) :( g + = n.css (a, "padding" + U [f],! 0, e), "padding"! == c && (g + = n.css (a, "Border" + U [f] + "Width" ,! 0, e))); trả về hàm g} Pa (b, c, e) {var f =! 0, g = "width" === c? B.offsetWidth: b.offsetHeight, h = Ca (b), i = "Border-box" === n.css (b, "boxSizing" ,! 1, h); if (d.msFullscreenEuity && a.top! == a && b.getClientRects () .length && (g = Math.round (100 * b.getBoundingClientRect () [c])), 0> = g || null == g) {if (g = Fa (b, c, h), ( 0> g | | null == g) && (g = b.style [c]), Ba.test (g)) return g; f = i && (l.boxSizingReliable () || g === b.style [c]), g = parseFloat (g) || 0} return g + Oa (b, c, e | | (i? "đường viền": "nội dung"), f, h) + "px"} hàm Qa (a, b) {for (var c, d, e, f = [], g = 0, h = a.length; h> g; g ++) d = a [g], d.style && (f [g] = N.get (d, "olddisplay"), c = d.style.display, b? ( f [g] || "không"! == c || (d.style.display = ""), "" === d.style.display && V (d) && (f [g] = N.access ( d, "olddisplay", za (d.nodeName)))) :( e = V (d), "none" === c && e | | N.set (d, "olddisplay", e? c: n.css (d, "hiển thị")))); for (g = 0; h> g; g ++) d = a [g], d.style && (b && "none"! == d.style.display && ""! = = d.style.display || (d.style.display = b? f [g] || "": "none")); trả về a} n.extend ({cssHooks: {opacity: {get: function ( a, b) {if (b) {var c = Pháp (a,"opacity"); return "" === c? "1": c}}}}, cssNumber: {animationIterationCount :! 0, cộtCount :! 0, fillOpacity :! 0, flexGrow :! 0, flexShrink :! 0, , font Weight :! 0, lineHeight :! 0, opacity :! 0, order :! 0, mồ côi :! 0, góa :! 0, z Index :! 0, zoom :! 0}, cssProps: {"float": " cssFloat "}, style: function (a, b, c, d) {if (a && 3! == a.nodeType && 8! == a.nodeType && a.style) {var e, f, g, h = n.camelCase (b ), i = a.style; return b = n.cssProps [h] || (n.cssProps [h] = Ma (h) | | h), g = n.cssHooks [b] || n.cssHooks [ h], void 0 === c? g && "get" trong g && void 0! == (e = g.get (a ,! 1, d))? e: i [b] :( f = typeof c, " chuỗi "=== f && (e = T.exec (c)) && e [1] && (c = W (a, b, e), f =" số "), null! = c && c === c && (" số "=== f && (c + = e && e [3] || (n.cssNumber [h]?" ":" px ")), l.clearCloneStyle || ""! == c || 0! == b.indexOf ("nền") || (i [b] = "thừa kế"), g && "set" trong g && void 0 === (c = g .set (a, c, d)) || (i [b] = c)), void 0)}}, css: hàm (a, b, c, d) {var e, f, g, h = n.camelCase (b); return b = n.cssProps [h] || (n.cssProps [h] = Ma (h) || h), g = n.cssHooks [b] || n.cssHooks [h ], g && "get" trong g && (e = g.get (a ,! 0, c)), void 0 === e && (e = Fa (a, b, d)), "bình thường" === e && b trong Ja && (e = Ja [b]), "" === c || c? (f = parseFloat (e), c ===! 0 || isFinite (f)? f || 0: e): e}}), n.each (["height", "width"], function (a, b) {n.cssHooks [b] = {get: function (a, c, d) {return c? Ha. test (n.css (a, "display")) && 0 === a.offsetWidth? Da (a, Ia, function () {return Pa (a, b, d)}): Pa (a, b, d ): void 0}, set: function (a, c, d) {var e, f = d && Ca (a), g = d && Oa (a, b, d, "Border-box" === n.css (a, "boxSizing" ,! 1, f), f); return g && (e = T.exec (c)) && "px"! == (e [3] || "px") && (a .style [b] = c, c = n.css (a, b)), Na (a, c, g)}}}), n.cssHooks.marginLeft = Ga (l.reliableMarginLeft, hàm (a, b ) {return b? (parseFloat (Fa (a, "marginLeft")) || a.getBoundingClientRect (). left-Da (a, {marginLeft: 0}, function () {return a.getBoundingClientRect (). )) + "px": void 0}), n.cssHooks.marginRight = Ga (l.reliableMarginRight, function (a, b) {return b? Da (a, {display: "inline-block"}, Fa, [a, "marginRight"]): void 0}), n.each ({lề: "", đệm: "", viền: "Width"}, hàm (a, b) {n.cssHooks [a + b ] = {bung rộng: function (c) {for (var d = 0, e = {}, f = "chuỗi" == typeof c? c.split (""): [c]; 4> d; d ++) e [a + U [d] + b] = f [d] || f [d-2] || f [0]; trả lại e}}, Aa.test (a) || (n.cssHooks [a + b] .set = Na)}), n.fn.mở rộng ({css: function (a, b) {return K (this, function (a, b, c) {var d, e, f = {}, g = 0; if (n.isArray (b)) { for (d = Ca (a), e = b.length; e> g; g ++) f [b [g]] = n.css (a, b [g],! 1, d); return f} return void 0! == c? n.style (a, b, c): n.css (a, b)}, a, b, argument.length> 1)}, show: function () {return Qa (this ,! 0)}, hide: function () {return Qa (this)}, toggle: function (a) {return "boolean" == typeof a? A? This.show (): this. Leather (): this .each (function () {V (this)? n (this) .show (): n (this). leather ()})}}); function Ra (a, b, c, d, e) {return mới Ra.prototype.init (a, b, c, d, e)} n.Tween = Ra, Ra.prototype = {constructor: Ra, init: function (a, b, c, d, e, f) { this.elem = a, this.prop = c, this.ease = e || n.ease._default, this.options = b, this.start = this.now = this.cur (), this.end = d , this.unit = f || (n.cssNumber [c]? "": "px")}, cur: function () {var a = Ra.propHooks [this.prop]; trả lại a && a.get? a. nhận (cái này): Ra.propHooks._default.get (this)}, run: function (a) {var b, c = Ra.propHooks [this.prop]; return this.options.duration? this.pose = b = n.ease [this.ease] (a , this.options.duration * a, 0,1, this.options.duration): this.pose = b = a, this.now = (this.end-this.start) * b + this.start, this. Options.step && this.options.step.call (this.elem, this.now, this), c && c.set? c.set (this): Ra.propHooks._default.set (this), this}}, Ra.prototype .init.prototype = Ra.prototype, Ra.propHooks = {_ default: {get: function (a) {var b; return 1! == a.elem.nodeType || null! = a.elem [a.prop] && null == a.elem.style [a.prop]? a.elem [a.prop] :( b = n.css (a.elem, a.prop, ""), b && "auto"! == b ? b: 0)}, set: function (a) {n.fx.step [a.prop]? n.fx.step [a.prop] (a): 1! == a.elem.nodeType || null == a.elem.style [n.cssProps [a.prop]] &&! n.cssHooks [a.prop]? a.elem [a.prop] = a.now: n.style (a.elem, a.prop, a.now + a.unit)}}}, Ra.propHooks.scrollTop = Ra.propHooks.scrollLeft = {set: function (a) {a.elem.nodeType && a.elem.parentNode && (a.elem [a.prop] = a.now)}}, n.ease = {linear: function (a) {return a}, swing: function (a) {return.5-Math.cos (a * Math.PI) / 2}, _ default: "swing"}, n.fx = Ra.prototype.init, n.fx.step = {}; var Sa, Ta, Ua = / ^ (?: chuyển đổi | hiển thị | ẩn) $ /, Va = / queueHooks $ /; function Wa () {return a.setTimeout (function () {Sa = void 0}), Sa = n.now ()} hàm Xa (a, b) {var c, d = 0, e = {height: a}; for (b = b? 1: 0; 4 > d; d + = 2-b) c = U [d], e ["lề" + c] = e ["padding" + c] = a; return b && (e.opacity = e. thong = a), hàm e} Ya (a, b, c) {for (var d, e = (_ a.tweeners [b] | | []). concat (_a.tweeners ["*"]), f = 0, g = e.length; g> f; f ++) if (d = e [f] .call (c, b, a)) trả về hàm d} Za (a, b, c) {var d, e, f, g, h, i, j, k, l = this, m = {}, o = a.style, p = a.nodeType && V (a), q = N.get (a, "fxshow"); c.queue || (h = n._queueHooks (a,"fx"), null == h.unqueued && (h.unqueued = 0, i = h.empty.fire, h.empty.fire = function () {h.unqueued || i ()}), h.unqueued ++ , l.always (function () {l.always (function () {h.unqueued -, n.queue (a, "fx"). length || h.empty.fire ()})})), 1 === a.nodeType && ("height" trong b || "width" trong b) && (c.overflow = [o.overflow, o.overflowX, o.overflowY], j = n.css (a, " hiển thị "), k =" none "=== j? N.get (a," olddisplay ") || za (a.nodeName): j," inline "=== k &&" none "=== n. css (a, "float") && (o.display = "inline-block")), c.overflow && (o.overflow = "hidden", l.always (function () {o.overflow = c.overflow [ 0], o.overflowX = c.overflow [1], o.overflowY = c.overflow [2]})); for (d in b) if (e = b [d], Ua.exec (e)) {if (xóa b [d], f = f || "chuyển đổi" === e, e === (p? "ẩn": "hiển thị")) {if ("hiển thị"! == e ||! q || void 0 === q [d]) tiếp tục; p =! 0} m [d] = q && q [d] || n.style ( a, d)} other j = void 0; if (n.isEmptyObject (m)) "inline" === ("none" === j? za (a.nodeName): j) && (o.display = j); khác {q? "ẩn" trong q && (p = q.hidden): q = N.access (a, "fxshow", {}), f && (q.hidden =! p), p? n ( a) .show (): l.done (function () {n (a). leather ()}), l.done (function () {var b; N.remove (a, "fxshow"); for ( b trong m) n.style (a, b, m [b])}); for (d in m) g = Ya (p? q [d]: 0, d, l), d in q || ( q [d] = g.start, p && (g.end = g.start, g.start = "width" === d || "height" === d? 1: 0))}} hàm $ a (a, b) {var c, d, e, f, g; for (c in a) if (d = n.camelCase (c), e = b [d], f = a [c], n. isArray (f) && (e = f [1], f = a [c] = f [0]), c! == d && (a [d] = f, xóa a [c]), g = n. cssHooks [d], g && "bung rộng" trong g) {f = g.Exand (f), xóa một [d];for (c in f) c in a | | (a [c] = f [c], b [c] = e)} khác b [d] = e} hàm _a (a, b, c) {var d , e, f = 0, g = _a.prefilters.length, h = n.Deferred (). always (function () {xóa i.elem}), i = function () {if (e) return! 1; for (var b = Sa | | Wa (), c = Math.max (0, j.startTime + j.duration-b), d = c / j.duration || 0, f = 1-d, g = 0, i = j.tweens.length; i> g; g ++) j.tweens [g] .run (f); return h.notifyWith (a, [j, f, c]), 1> f && i? C: (h.resolveWith (a, [j]),! 1)}, j = h.promise ({elem: a, đạo cụ: n.extend ({}, b), opts: n.extend (! 0, { SpecialEasing: {}, Easing: n.ease._default}, c), originalProperies: b, originalOptions: c, startTime: Sa || Wa (), thời gian: c.duration, twges: [], createdTween: function (b , c) {var d = n.Tween (a, j.opts, b, c, j.opts.specialEasing [b] || j.opts.ease); return j.tweens.push (d), d} , dừng: hàm (b) {var c = 0, d = b? j.tweens.length: 0; if (e) trả lại cái này; for (e =! 0; d> c; c ++) j.tweens [c ] .run (1); return b? (h.notifyWith (a, [j, 1,0]), h.resolveWith (a,[j, b])): h.rejectWith (a, [j, b]), this}}), k = j.props; for ($ a (k, j.opts.specialEasing); g> f; f ++) if (d = _a.prefilters [f] .call (j, a, k, j.opts)) return n.isFunction (d.stop) && (n._queueHooks (j.elem, j.opts.queue ) .stop = n.proxy (d.stop, d)), d; return n.map (k, Ya, j), n.isFunction (j.opts.start) && j.opts.start.call (a, j), n.fx.timer (n.extend (i, {elem: a, anim: j, queue: j.opts.queue})), j.proTHER (j.opts.proTHER) .done (j. opts.done, j.opts.complete) .fail (j.opts.fail) .always (j.opts.always)} n.Animation = n.extend (_a, {tweeners: {"*": [function ( a, b) {var c = this.createTween (a, b); return W (c.elem, a, T.exec (b), c), c}]}, tweener: function (a, b) { n.isFactor (a)? (b = a, a = ["*"]): a = a.match (G); for (var c, d = 0, e = a.length; e> d; d ++ ) c = a [d], _ a.tweeners [c] = _ a.tweeners [c] || [], _ a.tweeners [c] .unshift (b)}, prefilters: [Za], prefilter: function (a , b) {b? _a.prefilters.unshift (a): _ a.prefilters.đẩy (a)}}), n.speed = function (a, b, c) {var d = a && "object" == typeof a? n.extend ({}, a): {hoàn thành: c ||! c && b || n.isFunction (a) && a, thời lượng: a, nới lỏng: c && b || b &&! n.isFunction (b) && b}; return d.duration = n.fx.off? 0: "number" == typeof d.duration? d.duration: d.duration trong n.fx.speed? n.fx.speed [d.duration]: n.fx.speed._default, null! = d.queue && d.queue! ==! 0 || (d.queue = "fx"), d.old = d.complete, d.complete = function () {n.isFunction (d.old) && d.old.call (this), d.queue && n.dequeue (this, d.queue)}, d}, n.fn.extend ({fadeTo: function (a, b, c, d) {return this.filter (V) .css ("opacity", 0) .show () .end (). animate ({opacity: b}, a, c, d)}, animate: function (a, b, c, d) {var e = n.isEmptyObject (a), f = n. tốc độ (b, c, d), g = function () {var b = _a (this, n.extend ({}, a), f); (e | | N.get (này, "kết thúc")) && b.stop (!0)}; return g.finish = g, e | | f.queue ===! 1? This.each (g): this.queue (f.queue, g)}, stop: function (a, b, c) {var d = function (a) {var b = a.stop; xóa a.stop, b (c)}; trả về "chuỗi"! = typeof a && (c = b, b = a, a = void 0 ), b && a! ==! 1 && this.queue (a || "fx", []), this.each (function () {var b =! 0, e = null! = a && a + "queueHooks", f = n. bộ hẹn giờ, g = N.get (này); if (e) g [e] && g [e] .stop && d (g [e]); khác cho (e in g) g [e] && g [e] .stop && Va. test (e) && d (g [e]); for (e = f.length; e -;) f [e] .elem! == this || null! = a && f [e] .queue! == a || (f [e] .anim.stop (c), b =! 1, f.splice (e, 1));! b && c | | n.dequeue (this, a)})}, finish: function ( a) {return a! ==! 1 && (a = a || "fx"), this.each (function () {var b, c = N.get (this), d = c [a + "queue"] , e = c [a + "queueHooks"], f = n.timers, g = d? d.length: 0; for (c.finish =! 0, n.queue (this, a, []),e && e.stop && e.stop.call (này ,! 0), b = f.length; b -;) f [b] .elem === this && f [b] .queue === a && (f [b]. anim.stop (! 0), f.splice (b, 1)); for (b = 0; g> b; b ++) d [b] && d [b] .finish && d [b] .finish.call (này) ; xóa c.finish})}}), n.each (["chuyển đổi", "hiển thị", "ẩn"], hàm (a, b) {var c = n.fn [b]; n.fn [ b] = function (a, d, e) {return null == a || "boolean" == typeof a? c.apply (this, argument): this.animate (Xa (b ,! 0), a, d, e)}}), n.each ({slideDown: Xa ("show"), slideUp: Xa ("ẩn"), slideToggle: Xa ("chuyển đổi"), fadeIn: {opacity: "show"}, fadeOut: {opacity: "hide"}, fadeToggle: {opacity: "toggle"}}, function (a, b) {n.fn [a] = function (a, c, d) {return this.animate (b , a, c, d)}}), n.timers = [], n.fx.tick = function () {var a, b = 0, c = n.timers; for (Sa = n.now () ; b <c.length; b ++) a = c [b], a () | | c [b]! == a || c.mối nối (b -, 1); c.length || n.fx.stop (), Sa = void 0}, n.fx.timer = function (a) {n.timers.push (a), a ( )? n.fx.start (): n.timers.pop ()}, n.fx.interval = 13, n.fx.start = function () {Ta || (Ta = a.setInterval (n.fx .tick, n.fx.interval))}, n.fx.stop = function () {a.clearInterval (Ta), Ta = null}, n.fx.speed = {Slow: 600, fast: 200, _default : 400}, n.fn.delay = function (b, c) {return b = n.fx? N.fx.speed [b] | | b: b, c = c || "fx", this.queue (c, hàm (c, d) {var e = a.setTimeout (c, b); d.stop = function () {a.clearTimeout (e)}})}, function () {var a = d. createdEuity ("input"), b = d.createEuity ("select"), c = b.appendChild (d.createEuity ("tùy chọn")); a.type = "hộp kiểm", l.checkOn = ""! = = a.value, l.optSelected = c.selected, b.disables =! 0, l.optDisables =! c.disables, a = d.createEuity ("input"), a.value = "t", a. loại = "radio", l.radioValue = "t" === a.value} (); var ab, bb = n.expr.attrHandle; n.fn.extend ({attr: function (a, b) {return K (this, n.attr, a, b, argument.length> 1 )}, removeAttr: function (a) {return this.each (function () {n.removeAttr (this, a)})}}), n.extend ({attr: function (a, b, c) {var d, e, f = a.nodeType; if (3! == f && 8! == f && 2! == f) trả về "không xác định" == typeof a.getAttribution? n.prop (a, b, c) :( 1 === f && n.isXMLDoc (a) || (b = b.toLowerCase (), e = n.attrHooks [b] || (n.expr.match.bool.test (b)? Ab: void 0)) , void 0! == c? null === c? void n.removeAttr (a, b): e && "set" trong e && void 0! == (d = e.set (a, c, b))? d : (a.setAttribution (b, c + ""), c): e && "get" trong e && null! == (d = e.get (a, b))? d: (d = n.find.attr (a , b), null == d? void 0: d))}, attrHooks: {type: {set: function (a, b) {if (! l.radioValue && "radio" === b && n.nodeName (a, "đầu vào")) {var c = a.value; return a.setAttribution ("type", b), c && (a.value = c), b}}}}, removeAttr: function (a, b) {var c, d, e = 0, f = b && b.match (G) ; if (f && 1 === a.nodeType) while (c = f [e ++]) d = n.propFix [c] || c, n.expr.match.bool.test (c) && (a [d] =! 1), a.removeAttribution (c)}}), ab = {set: function (a, b, c) {return b ===! 1? N.removeAttr (a, c): a.setAttribution ( c, c), c}}, n.each (n.expr.match.bool.source.match (/ \ w + / g), hàm (a, b) {var c = bb [b] || n. find.attr; bb [b] = function (a, b, d) {var e, f; return d || (f = bb [b], bb [b] = e, e = null! = c (a , b, d)? b.toLowerCase (): null, bb [b] = f), e}}); var cb = / ^ (?: input | select | textarea | nút) $ / i, db = / ^ (?: a | area) $ / i; n.fn.extend ({prop: function (a, b) {return K (this, n.prop, a, b, argument.length> 1)}, removeProp : function (a) {return this.each (function () {xóa this [n.propFix [a] || a]})}}), n.extend ({prop: function (a, b, c) { var d, e, f = a.nodeType; if (3! == f && 8! == f && 2!== f) trả lại 1 === f && n.isXMLDoc (a) || (b = n.propFix [b] || b,
e = n.propHooks [b]), void 0! == c? e && "set" trong e && void 0! == (d = e.set (a, c, b))? d: a [b] = c : e && "get" trong e && null! == (d = e.get (a, b))? d: a [b]}, propHooks: {tab Index: {get: function (a) {var b = n.find .attr (a, "tabindex"); return b? parseInt (b, 10): cb.test (a.nodeName) || db.test (a.nodeName) && a.href? 0: -1}}}, propFix: {"cho": "htmlFor", "class": "className"}}), l.optSelected || (n.propHooks.selected = {get: function (a) {var b = a.parentNode; return b && b.parentNode && b.parentNode.selectedIndex, null}, set: function (a) {var b = a.parentNode; b && (b.selectedIndex, b.parentNode && b.parentNode.selectedIndex)}}), n.each (" "," readOnly "," maxLạng "," cellSpaces "," cellPadding "," rowSpan "," colSpan ","useMap "," frameBorder "," contentEditable "], function () {n.propFix [this.toLowerCase ()] = this}); var eb = / [\ t \ r \ n \ f] / g; function fb (a) {return a.getAttribution && a.getAttribution ("class") || ""} n.fn.extend ({addClass: function (a) {var b, c, d, e, f, g, h, i = 0; if (n.isFunction (a)) return this.each (function (b) {n (this) .addClass (a.call (this, b, fb (this)))}); if ("chuỗi "== typeof a && a) {b = a.match (G) || []; while (c = this [i ++]) if (e = fb (c), d = 1 === c.nodeType && (" " + e + "") .replace (eb, "")) {g = 0; while (f = b [g ++]) d.indexOf ("" + f + "") <0 && (d + = f + ""); h = n.trim (d), e! == h && c.setAttribution ("class", h)}} return this}, removeClass: function (a) {var b, c, d, e, f, g, h, i = 0; if (n.isFunction (a)) return this.each (function (b) {n (this) .removeClass (a.call (this, b,fb (this)))}); if (! argument.length) trả lại this.attr ("class", ""); if ("chuỗi" == typeof a && a) {b = a.match (G) || []; while (c = this [i ++]) if (e = fb (c ), d = 1 === c.nodeType && ("" + e + "") .replace (eb, "")) {g = 0; while (f = b [g ++]) while (d.indexOf ("" + f + "")> - 1) d = d.replace ("" + f + "", ""); h = n.trim (d), e! == h && c.setAttribution ("class", h)} } return this}, toggleClass: function (a, b) {var c = typeof a; return "boolean" == typeof b && "string" === c? b? this.addClass (a): this.removeClass (a) ): n.isFunction (a)? this.each (function (c) {n (this) .toggleClass (a.call (this, c, fb (this), b), b)}): this.each ( hàm () {var b, d, e, f; if ("chuỗi" === c) {d = 0, e = n (this), f = a.match (G) || []; while ( b = f [d ++]) e.hasClass (b)? e.removeClass (b): e.addClass (b)} khác void 0! == a && "boolean"!== c || (b = fb (this), b && N.set (this, "__ className __", b), this.setAttribution && this.setAttribution ("class", b || a ===! 1? "": N .get (này, "__ className __") || ""))})}, hasClass: function (a) {var b, c, d = 0; b = "" + a + ""; while (c = this [ d ++]) if (1 === c.nodeType && ("" + fb (c) + "") .replace (eb, "") .indexOf (b)> - 1) return! 0; return! 1}} ); var gb = / \ r / g, hb = / [\ x20 \ t \ r \ n \ f] + / g; n.fn.extend ({val: function (a) {var b, c, d , e = this [0]; {if (argument.length) return d = n.isFunction (a), this.each (function (c) {var e; 1 === this.nodeType && (e = d? a .call (this, c, n (this) .val ()): a, null == e? e = "": "number" == typeof e? e + = "": n.isArray (e) && ( e = n.map (e, function (a) {return null == a? "": a + ""})), b = n.valHooks [this.type] || n.valHooks [this.nodeName.toLowerCase ()], b && "set" trong b && void 0! == b.set (this, e, "value") || (this.value = e))}); if (e) return b = n.valHooks [e.type] || n.valHooks [e.nodeName.toLowerCase ()], b && "get" trong b && void 0! == (c = b.get (e, "value"))? c: (c = e.value, "chuỗi" == typeof c? c.replace (gb, ""): null == c? "": c)}}}), n.extend ({valHooks: {tùy chọn: {get: hàm (a) {var b = n.find.attr (a, "value"); return null! = b? b: n.trim (n.text (a)). thay thế (hb, "")}} , chọn: {get: function (a) {for (var b, c, d = a.options, e = a.selected Index, f = "select-one" === a.type || 0> e, g = f? null: [], h = f? e + 1: d.length, i = 0> e? h: f? e: 0; h> i; i ++) if (c = d [i], ( c.selected || i === e) && (l.optDisables ?! c.disables: null === c.getAttribution ("bị vô hiệu hóa))) && (! c.parentNode.disatted ||! n.nodeName ( c.parentNode, "optgroup "))) {if (b = n (c) .val (), f) return b; g.push (b)} return g}, set: function (a, b) {var c, d, e = a.options, f = n.makeArray (b), g = e.length; while (g -) d = e [g], (d.selected = n.inArray (n.valHooks.option.get ( d), f)> - 1) && (c =! 0); trả về c || (a.selected Index = -1), f}}}}), n.each (["radio", "hộp kiểm"] , function () {n.valHooks [this] = {set: function (a, b) {return n.isArray (b)? a.checked = n.inArray (n (a) .val (), b)> -1: void 0}}, l.checkOn || (n.valHooks [this] .get = function (a) {return null === a.getAttribution ("value")? "On": a.value} )}); var ib = / ^ (?: Focusinf Focus | Focusoutblur) $ /; n.extend (n.event, {trigger: function (b, c, e, f) {var g, h, i, j, l, m, o, p = [e || d], q = k.call (b, "type")? b.type: b, r = k.call (b, "không gian tên")? b.namespace .split ("."): []; if (h = i = e = e | | d, 3! == e.nodeType && 8! == e.nodeType &&! ib.test (q + n.event.triggered) && (q.indexOf (".")> - 1 && (r = q.split ("."), q = r.shift (), r.sort ()), l = q.indexOf (":") <0 && "on" + q, b = b [n.Exando]? B: new n.Event (q, "object" == typeof b && b), b.isTrigger = f? 2: 3, b.namespace = r .join ("."), b.rnamespace = b.namespace? new RegExp ("(^ | \\.)" + r.join ("\\. (?:. * \\. |)") + "(\\. | $)"): null, b.result = void 0, b.target || (b.target = e), c = null == c? [b]: n.makeArray (c, [b]), o = n.event.special [q] || {}, f | |! o.trigger | | o.trigger.apply (e, c)! ==! 1)) {if (! f &&! o.noBubble &&! n.isWindow (e)) {for (j = o.delegateType || q, ib.test (j + q) || (h = h.parentNode); h; h = h.parentNode ) p.push (h), i = h; i === (e.ownerDocument || d) && p.push (i.defaultView || i.parentWindow || a)} g = 0; while ((h = p [g ++]) &&! b.isPropagationStopped ()) b.type = g> 1? j: o.bindType || q, m = (N.get (h, "sự kiện") || {}) [b.type] && N.get (h, "xử lý"), m && m.apply (h, c), m = l && h [l], m && m.apply && L (h) && (b.result = m.apply (h, c), b.result ===! 1 && b.preventDefault ()); return b.type = q, f || b.isDefaultPrevented () || o._default && o._default.apply (p. pop (), c)! ==! 1 ||! L (e) || l && n.isFactor (e [q]) &&! n.isWindow (e) && (i = e [l], i && (e [ l] = null), n.event.triggered = q, e [q] (), n.event.triggered = void 0, i && (e [l] = i)), b.result}}, mô phỏng: hàm (a, b, c) {var d = n.extend (new n.Event, c, {type: a, isSimulation :! 0}); n.event.trigger (d, null, b), d.isDefaultPrevented () && c.preventDefault ()}}), n.fn.extend ({trigger: function (a, b) {return this.each (function () {n.event.trigger (a, b, this)}) }, triggerHandler: function (a, b) {var c = this [0]; return c? n.event.trigger (a, b, c ,! 0): void 0}}), n.each ("làm mờ tiêu điểm tập trung vào tải trọng tập trung thay đổi kích thước cuộn cuộn tải nhấp chuột dblclick mousedown mouseup mousemove mouseover mouseenter mouseleave thay đổi chọn gửi keydown keypress keyup errorupmenmen ".split (" "), function (a, b) {n.fn [b] , c) {return argument.length> 0? this.on (b, null, a, c): this.trigger (b)}}), n.fn.extend ({hover: function (a, b) { return this.mouseenter (a) .mouseleave (b || a)}}), l.f Focusin = "onf Focusin" trong a, l.f Focusin || n.each ({tập trung: "tập trung", làm mờ: "tập trung" }, hàm (a, b) {var c = function (a) {n.event.simulation (b, a.target, n.event.fix (a))}; n.event.special [b] = { thiết lập: function () {var d = this.ownerDocument || this, e = N.access (d, b); e || d.addEventListener (a, c ,! 0), N.access (d, b, (e | | 0) +1)}, xé nát: function () {var d = this.ownerDocument || this, e = N.access (d, b) -1; e? N.access (d, b, e) :( d.removeEventListener (a, c ,! 0), N.xóa (d, b))}}}); var jb = a.location, kb = n.now (), lb = / \? /; n.parseJSON = function (a) {return JSON.parse (a + " ")}, n.parseXML = function (b) {var c; if (! b ||" chuỗi "! = typeof b) return null; thử {c = (new a.DOMParser) .parseFromString (b," text / xml ")} Catch (d) {c = void 0} return c &&! c.getElementsByTagName (" Parsererror "). length || n.error (" XML không hợp lệ: "+ b), c}; var mb = / #. * $ /, nb = / ([? &]) _ = [^ &] * /, ob = / ^ (. *?): [\ T] * ([^ \ r \ n] *) $ /gm,pb=/ucci(?:about|app|app-st Storage|.+-extension|file|res|widget):$/,qb=/ucci(?:GET|HEAD)$/,rb=/ ^ \ / \ //, sb = {}, tb = {}, ub = "* /". concat ("*"), vb = d.createEuity ("a"); vb.href = jb.href; hàm wb (a) {hàm trả về (b, c) {"chuỗi"! = typeof b && (c = b, b = "*"); var d, e = 0, f = b.toLowerCase (). G) || []; if (n.isFunction (c)) while (d = f [e ++]) "+" === d [0]? (D = d.lát (1) || "*", (a [d] = a [d] || []). unshift (c)) :( a [d] = a [d] | | []). đẩy ( c)}} hàm xb (a, b, c, d) {var e = {}, f = a === tb; hàm g (h) {var i; return e [h] =! 0, n. mỗi (a [h] || [], hàm (a, h) {var j = h (b, c, d); trả về "chuỗi"! = typeof j || f || e [j]? f? ! (i = j): void 0: (b.dataTypes.unshift (j), g (j),! 1)}), i} return g (b.dataTypes [0]) ||! e ["* "] && g (" * ")} chức năng yb (a, b) {var c, d, e = n.ajaxSinstall.flatOptions || {}; for (c in b) void 0! == b [c] && ((e [c]? a: d || (d = {})) [c] = b [c]); trả về d && n.extend (! 0, a, d), a} hàm zb (a, b , c) {var d, e, f, g, h = a.contents, i = a.dataTypes; while ("*" === i [0]) i.shift (), void 0 === d && (d = a.mimeType || b.getResponseHeader ("Loại nội dung")); if (d) cho (e in h) if (h [e] && h [e] .test (d)) {i.unshift (e); break} if (i [0] in c) f = i [0]; other {for (e in c) {if (! i [0] || a.converters [e + "" + i [ 0]]) {f = e;break} g || (g = e)} f = f || g} return f? (f! == i [0] && i.unshift (f), c [f]): void 0} chức năng Ab (a , b, c, d) {var e, f, g, h, i, j = {}, k = a.dataTypes.slice (); if (k [1]) cho (g trong a.converters) j [g.toLowerCase ()] = a.converters [g]; f = k.shift (); while (f) if (a.responseFields [f] && (c [a.responseFields [f]] = b), ! i && d && a.dataFilter && (b = a.dataFilter (b, a.dataType)), i = f, f = k.shift ()) if ("*" === f) f = i; khác if ("* "! == i && i! == f) {if (g = j [i +" "+ f] || j [" * "+ f] ,! g) cho (e trong j) if (h = e.split (""), h [1] === f && (g = j [i + "" + h [0]] | | j ["*" + h [0]])) {g ===! 0? g = j [e]: j [e]! ==! 0 && (f = h [0], k.unshift (h [1])); break} if (g! ==! 0) if (g && a [ "throws"]) b = g (b); khác hãy thử {b = g (b)} Catch (l) {return {state: "Parsererror", lỗi: g? l: "Không chuyển đổi từ" + i + "sang "+ F}}} trả về {trạng thái:"thành công", dữ liệu: b}} n.extend ({active: 0, lastModified: {}, etag: {}, ajaxSinstall: {url: jb.href, gõ: "GET", isLocal: pb.test (jb .protatio), global :! 0, processData :! 0, async :! 0, contentType: "application / x-www-form-urlencoding; charset = UTF-8", chấp nhận: {"*": ub, text: "text / plain", html: "text / html", xml: "application / xml, text / xml", json: "application / json, text / javascript"}, nội dung: {xml: / \ bxml \ b / , html: / \ bhtml /, json: / \ bjson \ b /}, answerFields: {xml: "responsXML", văn bản: "answerText", json: "responsJSON"}, bộ chuyển đổi: {"* text": String, "văn bản html" :! 0, "văn bản json": n.parseJSON, "văn bản xml": n.parseXML}, FlatOptions: {url :! 0, bối cảnh :! 0}}, ajaxSetup: function (a, b) {return b? yb (yb (a, n.ajaxSinstall), b): yb (n.ajaxSinstall, a)}, ajaxPrefilter: wb (sb),ajaxTransport: wb (tb), ajax: function (b, c) {"object" == typeof b && (c = b, b = void 0), c = c || {}; var e, f, g, h , i, j, k, l, m = n.ajaxSetup ({}, c), o = m.context || m, p = m.context && (o.nodeType || o.jquery)? n (o) : n.event, q = n.Deferred (), r = n.Callbacks ("bộ nhớ một lần"), s = m.statusCode || {}, t = {}, u = {}, v = 0, w = "đã hủy", x = {readyState: 0, getResponseHeader: function (a) {var b; if (2 === v) {if (! h) {h = {}; while (b = ob.exec ( g)) h [b [1] .toLowerCase ()] = b [2]} b = h [a.toLowerCase ()]} return null == b? null: b}, getAllResponseHeaders: function () {return 2 === v? g: null}, setRequestHeader: function (a, b) {var c = a.toLowerCase (); return v || (a = u [c] = u [c] | | a, t [ a] = b), this}, overrideMimeType: function (a) {return v || (m.mimeType = a), this}, statusCode: function (a) {var b; if (a) if (2> v ) for (b in a) s [b] = [s [b], a [b]]; other x.always (a [x.status]); return this}, abort: function (a) {var b = a || w; trả lại e && e.hủy bỏ (b), z (0, b), này}}; if (q.promise (x) .complete = r.add, x.success = x.done, x.error = x.fail, m.url = ((b || m.url || jb.href) + ""). thay thế (mb, ""). thay thế (rb, jb.protatio + "//"), m.type = c.method || c.type || m.method || m.type, m.dataTypes = n.trim (m.dataType || "*"). toLowerCase (). match (G) || [""], null == m.crossDomain) {j = d.createEuity ("a"); thử {j.href = m.url, j.href = j.href, m.crossDomain = vb.protatio + "//" + vb.host! = j.protatio + "//" + j.host} Catch (y) {m.crossDomain =! 0}} if (m.data && m. processData && "string"! = typeof m.data && (m.data = n.param (m.data, m.traditable)), xb (sb, m, c, x), 2 === v) return x; k = n.event && m.global, k && 0 === n.active ++ && n. event.trigger ("ajaxStart"), m.type = m.type.toUpperCase (), m.hasContent =! qb.test (m.type), f = m.url, m.hasContent || (m.data && (f = m.url + = (lb.test (f)? "&": "?") + m.data, xóa m.data), m.cache ===! 1 && (m.url = nb. kiểm tra (f)? f.replace (nb, "$ 1 _ =" + kb ++): f + (lb.test (f)? "&": "?") + "_ =" + kb ++)), m.ifModified && (n.lastModified [f] && x.setRequestHeader ("If-Modified-Because", n.lastModified [f]), n.etag [f] && x.setRequestHeader ("If-none-Match", n.etag [f ))), (m.data && m.hasContent && m.contentType! ==! 1 | 0] && m.ac accept [m.dataTypes [0]]? M.ac accept [m.dataTypes [0]] + ("*"! == m.dataTypes [0]? "," + Ub + "; q = 0.01 ":" "): m.ac accept [" * "]); for (l in m.headers) x.setRequestHeader (l, m.headers [l]); if (m.beforeSend && (m.b BeforeSend.call (o, x, m) ===! 1 || 2 === v)) return x.abort (); w = "abort"; for (l in {thành công: 1, lỗi: 1, hoàn thành: 1}) x [l] (m [l]); if (e = xb (tb, m, c, x)) {if (x. yetState = 1, k && p.trigger ("ajaxSend ", [x, m]), 2 === v) return x; m.async && m.timeout> 0 && (i = a.setTimeout (function () {x.abort (" timeout ")}, m.timeout) ); thử {v = 1, e.send (t, z)} bắt (y) {if (! (2> v)) ném y; z (-1, y)}} khác z (-1, " Không vận chuyển "); hàm z (b, c, d, h) {var j, l, t, u, w, y = c; 2! == v && (v = 2, i && a.clearTimeout (i), e = void 0, g = h || "", x. yetState = b> 0? 4: 0, j = b> = 200 && 300> b | | 304 === b, d && (u = zb (m, x, d)), u = Ab (m, u, x, j), j? (m.ifModified && (w = x.getResponseHeader ("Sửa đổi lần cuối"), w && (n.lastModified [f] = w), w = x.getResponseHhead ("etag"), w && (n.etag [f] = w)), 204 === b || "ĐẦU "=== m.type? Y =" nocontent ": 304 === b? Y =" không sửa đổi ":( y = u.state, l = u.data, t = u.error, j =! T )) :( t = y ,! b && y || (y = "lỗi", 0> b && (b = 0))), x.status = b, x.statusText = (c || y) + "", j? q.resolveWith (o, [l, y, x]): q.rejectWith (o, [x, y, t]), x.statusCode (s), s = void 0, k && p.trigger (j? "ajaxSuccess": "ajaxError", [x, m, j? l: t]), r.fireWith (o, [x, y]), k && (p.trigger ("ajaxComplete", [x, m]) , - n.active | | n.event.trigger ("ajaxStop")))} return x}, getJSON: function (a, b, c) {return n.get (a, b, c, "json" )}, getScript: function (a, b) {return n.get (a, void 0, b, "script")}}), n.each (["get", "post"], function (a, b) {n [b] = function (a, c, d, e) {return n.isFunction (c) && (e = e | | d, d = c, c = void 0), n.ajax (n .extend ({url: a, loại: b, dataType: e, data: c, thành công: d}, n.isPlainObject (a) && a))}}), n._evalUrl = function (a) {return n.ajax ({url: a, gõ: "GET", dataType: "script", async :! 1, global:! 1, "ném" :! 0})}, n.fn.extend ({quấn ALL: function (a) {var b; return n.isFunction (a)? This.each (function (b) {n (this) .wrap ALL (a.call (this, b))}) :( this [0] && (b = n (a, this [0] .ownerDocument) .eq (0) .clone (! 0), this [0 ] .parentNode && b.insertB Before (this [0]), b.map (function () {var a = this; while (a.firstEuityChild) a = a.firstEuityChild; return a}). append (this)), this) }, quấnInner: function (a) {return n.isFunction (a)? this.each (function (b) {n (this) .wrapInner (a.call (this, b))}): this.each (function () {var b = n (this), c = b.contents (); c.length? c.wrap ALL (a): b.append (a)})}, quấn: function (a) {var b = n.isFunction (a); return this.each (function (c) {n (this) .wrap ALL (b? a.call (this, c): a)})}, yetrap: function () {return this. cha mẹ().mỗi (hàm () {n.nodeName (this, "body") || n (this) .replaceWith (this.childNodes)}). end ()}}), n.expr.filters.hidden = function (a ) {return! n.expr.filters.visible (a)}, n.expr.filters.visible = function (a) {return a.offsetWidth> 0 || a.offsetHeight> 0 || a.getClientRects (). độ dài> 0}; var Bb = /% 20 / g, Cb = / \ [\] $ /, Db = / \ r? \ n / g, Eb = / ^ (?: gửi | nút | hình ảnh | đặt lại | tệp) $ / i, Fb = / ^ (?: input | select | textarea | keygen) / i; hàm Gb (a, b, c, d) {var e; if (n.isArray (b)) n. mỗi (b, hàm (b, e) {c || Cb.test (a)? d (a, e): Gb (a + "[" + ("object" == typeof e && null! = e? b: " ") +"] ", e, c, d)}); other if (c ||" object "! == n.type (b)) d (a, b); other for (e in b) Gb (a + "[" + e + "]", b [e], c, d)} n.param = chức năng (a, b) {var c, d = [], e = chức năng (a, b) {b = n.isFunction (b)? b (): null == b? "": b, d [d.length] = encodeURIComponent (a) + "="+ encodeURIComponent (b)}; if (void 0 === b && (b = n.ajaxSinstall && n.ajaxSinstall.traditable), n.isArray (a) || a.jquery &&! n.isPlainObject (a) a, function () {e (this.name, this.value)}); other cho (c in a) Gb (c, a [c], b, e); return d.join ("&"). thay thế (Bb, "+")}, n.fn.extend ({serialize: function () {return n.param (this.serializeArray ())}, serializeArray: function () {return this.map (function () {var a = n.prop (this, "yếu tố"); trả về a? n.makeArray (a): this}). filter (function () {var a = this.type; return this.name &&! n (this ) .is (": bị vô hiệu hóa") && Fb.test (this.nodeName) &&! Eb.test (a) && (this.checked ||! X.test (a))}). map (function (a, b ) {var c = n (this) .val (); return null == c? null: n.isArray (c)? n.map (c, function (a) {return {name: b.name, value: a.replace (Db, "\ r \ n")}}): {name: b.name, value: c.replace (Db,"\ r \ n")}}). get ()}}), n.ajaxSinstall.xhr = function () {thử {trả về a.XMLHttpRequest} Catch (b) {}}; var Hb = {0: 200,1223: 204}, Ib = n.ajaxSinstall.xhr (); l.cors = !! Ib && "withCredentials" trong Ib, l.ajax = Ib = !! Ib, n.ajaxTransport (function (b) {var c, d; return l.cors | | Ib &&! b.crossDomain? {send: function (e, f) {var g, h = b.xhr (); if (h.open (b.type, b.url , b.async, b.username, b.password), b.xhrFields) cho (g trong b.xhrFields) h [g] = b.xhrFields [g]; b.mimeType && h.overrideMimeType && h.overrideMimeType (b.m , b.crossDomain || e ["X-Requested-With"] || (e ["X-Requested-With"] = "XMLHttpRequest"); for (g in e) h.setRequestHeader (g, e [g ]); c = function (a) {return function () {c && (c = d = h.onload = h.onerror = h.onabort = h.onreadystatechange = null, "abort" === a? h.abort (): "lỗi" === a? "số"! = typeof h.trạng thái? f (0, "lỗi"): f (h.status, h.statusText): f (Hb [h.status] || h.status, h.statusText, "văn bản"! == (h.responseType || "văn bản") || "chuỗi"! = typeof h.responseText? {binary: h.response}: {text: h.responseText}, h.getAllResponseHeaders ()))}}, h.onload = c ( ), d = h.onerror = c ("error"), void 0! == h.onabort? h.onabort = d: h.onreadystatechange = function () {4 === h. yetState && a.setTimeout (function ( ) {c && d ()})}, c = c ("hủy bỏ"); thử {h.send (b.hasContent && b.data || null)} Catch (i) {if (c) throw i}}, hủy bỏ: function () {c && c ()}}: void 0}), n.ajaxSetup ({chấp nhận: {script: "text / javascript, application / javascript, application / ecmascript, application / x-ecmascript"}, nội dung: {script : / \ b (?: java | ecma) script \ b /}, bộ chuyển đổi: {"script script": function (a) {return n.globalEval (a), a}}}), n.ajaxPrefilter ("script ", function (a) {void 0 === a.cache && (a.cache =! 1), a.crossDomain && (a.type =" GET ")}), n.ajaxTransport (" script ", function ( a) {if (a.crossDomain) {var b, c; return {send: function (e, f) {b = n ("<script>"). prop ({charset: a.scriptCharset, src: a. url}). on ("lỗi tải", c = function (a) {b.remove (), c = null, a && f ("error" === a.type? 404: 200, a.type)}) , d.head.appendChild (b [0])}, hủy bỏ: function () {c && c ()}}}}); var Jb = [], Kb = / (=) \? (? = & | $) | \? \? /; n.ajaxSetup ({jsonp: "gọi lại", jsonpCallback: function () {var a = Jb.pop () || n.Exando + "_" + kb ++; trả lại [a] =! 0, a}}), n.ajaxPrefilter ("json jsonp", hàm (b, c, d) {var e, f, g, h = b.jsonp! ==! 1 && (Kb.test (b.url )? "url": "chuỗi" == typeof b.data && 0 === (b.contentType || ""). indexOf ("application / x-www-form-urlencoding ") && Kb.test (b.data) &&" data "); return h ||" jsonp "=== b.dataTypes [0]? (e = b.jsonpCallback = n .isFunction (b.jsonpCallback)? b.jsonpCallback (): b.jsonpCallback, h? b [h] = b [h] .replace (Kb, "$ 1" + e): b.jsonp! ==! 1 && ( b.url + = (lb.test (b.url)? "&": "?") + b.jsonp + "=" + e), b.converters ["script json"] = function () {return g | | n.error (e + "không được gọi là"), g [0]}, b.dataTypes [0] = "json", f = a [e], a [e] = function () {g = argument} , d.always (function () {void 0 === f? n (a) .removeProp (e): a [e] = f, b [e] && (b.jsonpCallback = c.jsonpCallback, Jb.push (e)), g && n.isFunction (f) && f (g [0]), g = f = void 0}), "script"): void 0}), n.parseHTML = function (a, b, c) {if (! a || "chuỗi"! = typeof a) return null; "boolean" == typeof b && (c = b,b =! 1), b = b || d; var e = x.exec (a), f =! c && []; return e? [b.createEuity (e [1])] :( e = ca ( [a], b, f), f && f.length && n (f) .remove (), n.merge ([], e.childNodes))}; var Lb = n.fn.load; n.fn.load = function (a, b, c) {if ("chuỗi"! = typeof a && Lb) return Lb.apply (this, argument); var d, e, f, g = this, h = a.indexOf (""); return h> -1 && (d = n.trim (a.slice (h)), a = a.slice (0, h)), n.isFunction (b)? (c = b, b = void 0): b && "object" == typeof b && (e = "POST"), g.length> 0 && n.ajax ({url: a, type: e || "GET", dataType: "html", data: b}). (hàm (a) {f = argument, g.html (d? n ("<div>"). append (n.parseHTML (a)). find (d): a)}). always (c && function (a , b) {g.each (function () {c.apply (g, f || [a.responseText, b, a])})}), this}, n.each (["ajaxStart", "ajaxStop "," ajaxComplete ","ajaxError", "ajaxSuccess", "ajaxSend"], hàm (a, b) {n.fn [b] = function (a) {return this.on (b, a)}}), n.expr.filters .animated = function (a) {return n.grep (n.timers, function (b) {return a === b.elem}). length}; function Mb (a) {return n.isWindow (a)? a: 9 === a.nodeType && a.defaultView} n.offset = {set Offerset: function (a, b, c) {var d, e, f, g, h, i, j, k = n.css (a , "vị trí"), l = n (a), m = {}; "static" === k && (a.style.poseition = "tương đối"), h = l.offset (), f = n.css (a, "top"), i = n.css (a, "left"), j = ("perfect" === k || "fixed" === k) && (f + i) .indexOf ( "tự động")> - 1, j? (d = l.poseition (), g = d.top, e = d.left) :( g = parseFloat (f) || 0, e = parseFloat (i) | | 0), n.isF rối (b) && (b = b.call (a, c, n.extend ({}, h))), null! = B.top && (m.top = b.top-h .top + g), null! = b.left && (m.left = b.left-h.left + e),"bằng cách sử dụng" trong b? b .USE.call (a, m): l.css (m)}}, n.fn.extend ({offset: function (a) {if (argument.length) return void 0 = == a? this: this.each (function (b) {n.offset.set Offerset (this, a, b)}); var b, c, d = this [0], e = {top: 0, left : 0}, f = d && d.ownerDocument; if (f) return b = f.documentEuity, n.contains (b, d)? (E = d.getBoundingClientRect (), c = Mb (f), {top: e .top + c.pageY Offerset-b.clientTop, left: e.left + c.pageX Offerset-b.clientLeft}): e}, vị trí: function () {if (this [0]) {var a, b, c = this [0], d = {top: 0, left: 0}; return "fixed" === n.css (c, "location")? b = c.getBoundingClientRect () :( a = this.offsetParent (), b = this.offset (), n.nodeName (a [0], "html") || (d = a.offset ()), d.top + = n.css (a [0], " BorderTopWidth ",! 0), d.left + = n.css (a [0]," BorderLeftWidth ",! 0)), {top: b.top-d.top-n.css (c," marginTop ", ! 0), bên trái: b.left-d.left-n.css (c, "marginLeft" ,! 0)}}},offsetParent: function () {return this.map (function () {var a = this.offsetParent; while (a && "static" === n.css (a, "location")) a = a.offsetParent; return a | | Ea})}}), n.each ({scrollLeft: "pageX Offerset", scrollTop: "pageY Offerset"}, function (a, b) {var c = "pageY Offerset" === b; n.fn [a ] = function (d) {return K (this, function (a, d, e) {var f = Mb (a); return void 0 === e? f? f [b]: a [d]: void (f? f.scrollTo (c? f.pageX Offerset: e, c? e: f.pageY Offerset): a [d] = e)}, a, d, argument.length)}}), n.each ([ "top", "left"], function (a, b) {n.cssHooks [b] = Ga (l.pixelPocation, function (a, c) {return c? (c = Fa (a, b), Ba .test (c)? n (a) .poseition () [b] + "px": c): void 0})}), n.each ({Chiều cao: "chiều cao", Chiều rộng: "chiều rộng"}, hàm (a, b) {n.each ({padding: "bên trong" + a, nội dung: b, "": "bên ngoài" + a}, hàm (c, d) {n.fn [d] = function ( de) {var f = argument.length && (c || "boolean"! = typeof d), g = c || (d ===! 0 || e ===! 0? "lề": "viền" ); return K (this, function (b, c, d) {var e; return n.isWindow (b)? b.document.documentEuity ["client" + a]: 9 === b.nodeType? (e = b.documentEuity, Math.max (b.body ["scroll" + a], e ["scroll" + a], b.body ["offset" + a], e ["offset" + a], e ["client" + a])): void 0 === d? n.css (b, c, g): n.style (b, c, d, g)}, b, f? d: void 0 , f, null)}})}), n.fn.extend ({bind: function (a, b, c) {return this.on (a, null, b, c)}, unbind: function (a, b) {return this.off (a, null, b)}, ủy nhiệm: function (a, b, c, d) {return this.on (b, a, c, d)}, undelegate: function (a, b, c) {return 1 === argument.length? this.off (a, "**"): this.off (b, a || "**", c)}, size: function () { trả lại this.length}}), n.fn.andSelf = n.fn.addBack, "function"== typeof xác định && notify.amd && định nghĩa ("jquery", [], function () {return n}); var Nb = a.jQuery, Ob = a. $; return n.noConflict = function (b) {return a. $ === n && (a. $ = Ob), b && a.jQuery === n && (a.jQuery = Nb), n}, b || (a.jQuery = a. $ = N), n});